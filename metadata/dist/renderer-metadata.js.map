{"version":3,"sources":["webpack://RENDERER_METADATA/webpack/bootstrap","webpack://RENDERER_METADATA/./node_modules/@screeps/common/lib/constants.js","webpack://RENDERER_METADATA/./src/action-templates/appear.js","webpack://RENDERER_METADATA/./src/action-templates/blinking.js","webpack://RENDERER_METADATA/./src/action-templates/displayName.js","webpack://RENDERER_METADATA/./src/action-templates/flickering.js","webpack://RENDERER_METADATA/./src/objects/_all.metadata.js","webpack://RENDERER_METADATA/./src/objects/constructedWall.metadata.js","webpack://RENDERER_METADATA/./src/objects/constructionSite.metadata.js","webpack://RENDERER_METADATA/./src/calculation-templates/resourceTotal.js","webpack://RENDERER_METADATA/./src/objects/container.metadata.js","webpack://RENDERER_METADATA/./src/objects/controller.metadata.js","webpack://RENDERER_METADATA/../helpers/mathHelper.js","webpack://RENDERER_METADATA/./src/objects/creep.metadata.js","webpack://RENDERER_METADATA/./src/objects/extension.metadata.js","webpack://RENDERER_METADATA/./src/objects/extractor.metadata.js","webpack://RENDERER_METADATA/./src/objects/flag.metadata.js","webpack://RENDERER_METADATA/./src/objects/lab.metadata.js","webpack://RENDERER_METADATA/./src/objects/link.metadata.js","webpack://RENDERER_METADATA/./src/objects/mineral.metadata.js","webpack://RENDERER_METADATA/./src/objects/nuke.metadata.js","webpack://RENDERER_METADATA/./src/objects/nuker.metadata.js","webpack://RENDERER_METADATA/./src/objects/observer.metadata.js","webpack://RENDERER_METADATA/./src/objects/powerBank.metadata.js","webpack://RENDERER_METADATA/./src/objects/powerSpawn.metadata.js","webpack://RENDERER_METADATA/./src/objects/source.metadata.js","webpack://RENDERER_METADATA/./src/objects/spawn.metadata.js","webpack://RENDERER_METADATA/./src/objects/storage.metadata.js","webpack://RENDERER_METADATA/./src/objects/terminal.metadata.js","webpack://RENDERER_METADATA/./src/objects/tombstone.metadata.js","webpack://RENDERER_METADATA/./src/objects/tower.metadata.js","webpack://RENDERER_METADATA/./src/index.js","webpack://RENDERER_METADATA/./src/objects/energy.metadata.js","webpack://RENDERER_METADATA/./src/objects/keeperLair.metadata.js","webpack://RENDERER_METADATA/./src/objects/portal.metadata.js","webpack://RENDERER_METADATA/./src/objects/road.metadata.js","webpack://RENDERER_METADATA/./src/objects/rampart.metadata.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","OK","ERR_NOT_OWNER","ERR_NO_PATH","ERR_NAME_EXISTS","ERR_BUSY","ERR_NOT_FOUND","ERR_NOT_ENOUGH_ENERGY","ERR_NOT_ENOUGH_RESOURCES","ERR_INVALID_TARGET","ERR_FULL","ERR_NOT_IN_RANGE","ERR_INVALID_ARGS","ERR_TIRED","ERR_NO_BODYPART","ERR_NOT_ENOUGH_EXTENSIONS","ERR_RCL_NOT_ENOUGH","ERR_GCL_NOT_ENOUGH","FIND_EXIT_TOP","FIND_EXIT_RIGHT","FIND_EXIT_BOTTOM","FIND_EXIT_LEFT","FIND_EXIT","FIND_CREEPS","FIND_MY_CREEPS","FIND_HOSTILE_CREEPS","FIND_SOURCES_ACTIVE","FIND_SOURCES","FIND_DROPPED_ENERGY","FIND_DROPPED_RESOURCES","FIND_STRUCTURES","FIND_MY_STRUCTURES","FIND_HOSTILE_STRUCTURES","FIND_FLAGS","FIND_CONSTRUCTION_SITES","FIND_MY_SPAWNS","FIND_HOSTILE_SPAWNS","FIND_MY_CONSTRUCTION_SITES","FIND_HOSTILE_CONSTRUCTION_SITES","FIND_MINERALS","FIND_NUKES","FIND_TOMBSTONES","TOP","TOP_RIGHT","RIGHT","BOTTOM_RIGHT","BOTTOM","BOTTOM_LEFT","LEFT","TOP_LEFT","COLOR_RED","COLOR_PURPLE","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_YELLOW","COLOR_ORANGE","COLOR_BROWN","COLOR_GREY","COLOR_WHITE","LOOK_CREEPS","LOOK_ENERGY","LOOK_RESOURCES","LOOK_SOURCES","LOOK_MINERALS","LOOK_STRUCTURES","LOOK_FLAGS","LOOK_CONSTRUCTION_SITES","LOOK_NUKES","LOOK_TERRAIN","LOOK_TOMBSTONES","OBSTACLE_OBJECT_TYPES","MOVE","WORK","CARRY","ATTACK","RANGED_ATTACK","TOUGH","HEAL","CLAIM","BODYPART_COST","move","work","attack","carry","heal","ranged_attack","tough","claim","WORLD_WIDTH","WORLD_HEIGHT","CREEP_LIFE_TIME","CREEP_CLAIM_LIFE_TIME","CREEP_CORPSE_RATE","CARRY_CAPACITY","HARVEST_POWER","HARVEST_MINERAL_POWER","REPAIR_POWER","DISMANTLE_POWER","BUILD_POWER","ATTACK_POWER","UPGRADE_CONTROLLER_POWER","RANGED_ATTACK_POWER","HEAL_POWER","RANGED_HEAL_POWER","REPAIR_COST","DISMANTLE_COST","RAMPART_DECAY_AMOUNT","RAMPART_DECAY_TIME","RAMPART_HITS","RAMPART_HITS_MAX","2","3","4","5","6","7","8","ENERGY_REGEN_TIME","ENERGY_DECAY","SPAWN_HITS","SPAWN_ENERGY_START","SPAWN_ENERGY_CAPACITY","CREEP_SPAWN_TIME","SPAWN_RENEW_RATIO","SOURCE_ENERGY_CAPACITY","SOURCE_ENERGY_NEUTRAL_CAPACITY","SOURCE_ENERGY_KEEPER_CAPACITY","WALL_HITS","WALL_HITS_MAX","EXTENSION_HITS","EXTENSION_ENERGY_CAPACITY","0","1","ROAD_HITS","ROAD_WEAROUT","ROAD_DECAY_AMOUNT","ROAD_DECAY_TIME","LINK_HITS","LINK_HITS_MAX","LINK_CAPACITY","LINK_COOLDOWN","LINK_LOSS_RATIO","STORAGE_CAPACITY","STORAGE_HITS","STRUCTURE_SPAWN","STRUCTURE_EXTENSION","STRUCTURE_ROAD","STRUCTURE_WALL","STRUCTURE_RAMPART","STRUCTURE_KEEPER_LAIR","STRUCTURE_PORTAL","STRUCTURE_CONTROLLER","STRUCTURE_LINK","STRUCTURE_STORAGE","STRUCTURE_TOWER","STRUCTURE_OBSERVER","STRUCTURE_POWER_BANK","STRUCTURE_POWER_SPAWN","STRUCTURE_EXTRACTOR","STRUCTURE_LAB","STRUCTURE_TERMINAL","STRUCTURE_CONTAINER","STRUCTURE_NUKER","CONSTRUCTION_COST","spawn","extension","road","constructedWall","rampart","link","storage","tower","observer","powerSpawn","extractor","lab","terminal","container","nuker","CONSTRUCTION_COST_ROAD_SWAMP_RATIO","CONTROLLER_LEVELS","CONTROLLER_STRUCTURES","CONTROLLER_DOWNGRADE","CONTROLLER_DOWNGRADE_RESTORE","CONTROLLER_DOWNGRADE_SAFEMODE_THRESHOLD","CONTROLLER_CLAIM_DOWNGRADE","CONTROLLER_RESERVE","CONTROLLER_RESERVE_MAX","CONTROLLER_MAX_UPGRADE_PER_TICK","CONTROLLER_ATTACK_BLOCKED_UPGRADE","CONTROLLER_NUKE_BLOCKED_UPGRADE","SAFE_MODE_DURATION","SAFE_MODE_COOLDOWN","SAFE_MODE_COST","TOWER_HITS","TOWER_CAPACITY","TOWER_ENERGY_COST","TOWER_POWER_ATTACK","TOWER_POWER_HEAL","TOWER_POWER_REPAIR","TOWER_OPTIMAL_RANGE","TOWER_FALLOFF_RANGE","TOWER_FALLOFF","OBSERVER_HITS","OBSERVER_RANGE","POWER_BANK_HITS","POWER_BANK_CAPACITY_MAX","POWER_BANK_CAPACITY_MIN","POWER_BANK_CAPACITY_CRIT","POWER_BANK_DECAY","POWER_BANK_HIT_BACK","POWER_SPAWN_HITS","POWER_SPAWN_ENERGY_CAPACITY","POWER_SPAWN_POWER_CAPACITY","POWER_SPAWN_ENERGY_RATIO","EXTRACTOR_HITS","EXTRACTOR_COOLDOWN","LAB_HITS","LAB_MINERAL_CAPACITY","LAB_ENERGY_CAPACITY","LAB_BOOST_ENERGY","LAB_BOOST_MINERAL","LAB_COOLDOWN","LAB_REACTION_AMOUNT","GCL_POW","GCL_MULTIPLY","GCL_NOVICE","MODE_SIMULATION","MODE_WORLD","TERRAIN_MASK_WALL","TERRAIN_MASK_SWAMP","TERRAIN_MASK_LAVA","MAX_CONSTRUCTION_SITES","MAX_CREEP_SIZE","MINERAL_REGEN_TIME","MINERAL_MIN_AMOUNT","H","O","L","K","Z","U","X","MINERAL_RANDOM_FACTOR","MINERAL_DENSITY","MINERAL_DENSITY_PROBABILITY","MINERAL_DENSITY_CHANGE","DENSITY_LOW","DENSITY_MODERATE","DENSITY_HIGH","DENSITY_ULTRA","TERMINAL_CAPACITY","TERMINAL_HITS","TERMINAL_SEND_COST","TERMINAL_MIN_SEND","TERMINAL_COOLDOWN","CONTAINER_HITS","CONTAINER_CAPACITY","CONTAINER_DECAY","CONTAINER_DECAY_TIME","CONTAINER_DECAY_TIME_OWNED","NUKER_HITS","NUKER_COOLDOWN","NUKER_ENERGY_CAPACITY","NUKER_GHODIUM_CAPACITY","NUKE_LAND_TIME","NUKE_RANGE","NUKE_DAMAGE","TOMBSTONE_DECAY_PER_PART","PORTAL_DECAY","ORDER_SELL","ORDER_BUY","MARKET_FEE","FLAGS_LIMIT","SUBSCRIPTION_TOKEN","RESOURCE_ENERGY","RESOURCE_POWER","RESOURCE_HYDROGEN","RESOURCE_OXYGEN","RESOURCE_UTRIUM","RESOURCE_LEMERGIUM","RESOURCE_KEANIUM","RESOURCE_ZYNTHIUM","RESOURCE_CATALYST","RESOURCE_GHODIUM","RESOURCE_HYDROXIDE","RESOURCE_ZYNTHIUM_KEANITE","RESOURCE_UTRIUM_LEMERGITE","RESOURCE_UTRIUM_HYDRIDE","RESOURCE_UTRIUM_OXIDE","RESOURCE_KEANIUM_HYDRIDE","RESOURCE_KEANIUM_OXIDE","RESOURCE_LEMERGIUM_HYDRIDE","RESOURCE_LEMERGIUM_OXIDE","RESOURCE_ZYNTHIUM_HYDRIDE","RESOURCE_ZYNTHIUM_OXIDE","RESOURCE_GHODIUM_HYDRIDE","RESOURCE_GHODIUM_OXIDE","RESOURCE_UTRIUM_ACID","RESOURCE_UTRIUM_ALKALIDE","RESOURCE_KEANIUM_ACID","RESOURCE_KEANIUM_ALKALIDE","RESOURCE_LEMERGIUM_ACID","RESOURCE_LEMERGIUM_ALKALIDE","RESOURCE_ZYNTHIUM_ACID","RESOURCE_ZYNTHIUM_ALKALIDE","RESOURCE_GHODIUM_ACID","RESOURCE_GHODIUM_ALKALIDE","RESOURCE_CATALYZED_UTRIUM_ACID","RESOURCE_CATALYZED_UTRIUM_ALKALIDE","RESOURCE_CATALYZED_KEANIUM_ACID","RESOURCE_CATALYZED_KEANIUM_ALKALIDE","RESOURCE_CATALYZED_LEMERGIUM_ACID","RESOURCE_CATALYZED_LEMERGIUM_ALKALIDE","RESOURCE_CATALYZED_ZYNTHIUM_ACID","RESOURCE_CATALYZED_ZYNTHIUM_ALKALIDE","RESOURCE_CATALYZED_GHODIUM_ACID","RESOURCE_CATALYZED_GHODIUM_ALKALIDE","REACTIONS","G","OH","UH","UO","ZH","ZO","KH","KO","LH","LO","GH","GO","UH2O","UHO2","LH2O","LHO2","KH2O","KHO2","ZH2O","ZHO2","GH2O","GHO2","ZK","UL","BOOSTS","harvest","XUHO2","build","repair","XLH2O","dismantle","XZH2O","upgradeController","XGH2O","XUH2O","rangedAttack","rangedMassAttack","XKHO2","rangedHeal","XLHO2","capacity","XKH2O","fatigue","XZHO2","damage","XGHO2","REACTION_TIME","PORTAL_UNSTABLE","PORTAL_MIN_TIMEOUT","PORTAL_MAX_TIMEOUT","POWER_BANK_RESPAWN_TIME","INVADERS_ENERGY_GOAL","SYSTEM_USERNAME","SIGN_NOVICE_AREA","SIGN_RESPAWN_AREA","BODYPARTS_ALL","RESOURCES_ALL","COLORS_ALL","blinking","fromAlpha","toAlpha","toDuration","fromDuration","action","params","displayName","type","additionalWhen","once","layer","when","calcs","isOwner","stateExtra","gameData","showEnemyNames","showMyNames","payload","text","$calc","style","align","fill","fontFamily","fontSize","stroke","strokeThickness","anchor","x","y","flickering","alpha1","alpha2","alpha3","alpha4","$rel","koef","$random","_all_metadata","data","$state","calculations","id","props","func","state","user","player","undefined","world","options","VIEW_BOX","processors","_isDisabled","drawings","method","blendMode","actions","constructedWall_metadata","texture","width","height","hits","hitsMax","zIndex","constructionSite_metadata","color","radius","lineWidth","progressTotal","disappearProcessor","resourceTotal","constants_default","a","resourcesTotal","forEach","resourceName","container_metadata","energyCapacity","energy","power","tint","shouldRun","pivot","alpha","controller_metadata","level","downgradeTime","gameTime","reservation","upgradeBlocked","safeMode","visible","rotation","Math","PI","progress","strokeColor","strokeWidth","$processorParam","mathHelper","calculateAngle","x0","y0","angle","atan2","convertGameXYToWorld","CELL_SIZE","scaleGameToWorld","isNpc","isNotNpc","creep_metadata","users","username","prevState","prevX","prevY","min","controller","objects","find","parentId","spawning","actionLog","say","showCreepSpeech","isPublic","targetId","METADATA","extension_metadata","scale","extractor_metadata","cooldown","until","FLAG_COLORS","9","10","flag_metadata","secondaryColor","showFlagsNames","mineralPath","energyRectangle","lab_metadata","mineralAmount","mineralCapacity","assign","runReaction","link_metadata","COLORS","foreground","background","mineral_metadata","mineralType","fontWeight","scaleAction","landed","landTime","notLanded","nuke_metadata","Number","MAX_VALUE","max","round","blur","resourceTriangle","gRectangle","nuker_metadata","g","GCapacity","gCapacity","observer_metadata","powerBank_metadata","sqrt","ellipse1","ellipse2","ellipse3","ellipse4","arc","startAngle","powerSpawn_metadata","powerCapacity","rect1","rect2","source_metadata","spawn_metadata_ellipse1","spawn_metadata_ellipse2","spawn_metadata_ellipse3","spawn_metadata_arc","spawn_metadata","remainingTime","needTime","TOTAL_HEIGHT","isCooldown","cooldownTime","terminal_metadata","result","tombstone_metadata","playerColor","decayTime","deathTime","tower_metadata","shotAnim","energyBarHeight","VoidFilter","PIXI","filters","TilingSprite","extras","__webpack_exports__","preprocessors","layers","afterCreate","async","app","resourceManager","HALF_CELL_SIZE","lighting","setupExits","textureName","tileX","tileY","flipX","flipY","getCachedResource","sprite","tileScale","renderer","WebGLRenderer","addChild","Graphics","beginFill","drawRect","endFill","ground","ground2","BLEND_MODES","MULTIPLY","isDefault","ambient","on","element","_overrideBlendMode","SCREEN","_all","constructionSite","creep","flag","keeperLair","mineral","nuke","portal","powerBank","source","storage_metadata","tombstone"],"mappings":"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","file":"renderer-metadata.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = {\r\n    OK: 0,\r\n    ERR_NOT_OWNER: -1,\r\n    ERR_NO_PATH: -2,\r\n    ERR_NAME_EXISTS: -3,\r\n    ERR_BUSY: -4,\r\n    ERR_NOT_FOUND: -5,\r\n    ERR_NOT_ENOUGH_ENERGY: -6,\r\n    ERR_NOT_ENOUGH_RESOURCES: -6,\r\n    ERR_INVALID_TARGET: -7,\r\n    ERR_FULL: -8,\r\n    ERR_NOT_IN_RANGE: -9,\r\n    ERR_INVALID_ARGS: -10,\r\n    ERR_TIRED: -11,\r\n    ERR_NO_BODYPART: -12,\r\n    ERR_NOT_ENOUGH_EXTENSIONS: -6,\r\n    ERR_RCL_NOT_ENOUGH: -14,\r\n    ERR_GCL_NOT_ENOUGH: -15,\r\n\r\n    FIND_EXIT_TOP: 1,\r\n    FIND_EXIT_RIGHT: 3,\r\n    FIND_EXIT_BOTTOM: 5,\r\n    FIND_EXIT_LEFT: 7,\r\n    FIND_EXIT: 10,\r\n    FIND_CREEPS: 101,\r\n    FIND_MY_CREEPS: 102,\r\n    FIND_HOSTILE_CREEPS: 103,\r\n    FIND_SOURCES_ACTIVE: 104,\r\n    FIND_SOURCES: 105,\r\n    FIND_DROPPED_ENERGY: -106,\r\n    FIND_DROPPED_RESOURCES: 106,\r\n    FIND_STRUCTURES: 107,\r\n    FIND_MY_STRUCTURES: 108,\r\n    FIND_HOSTILE_STRUCTURES: 109,\r\n    FIND_FLAGS: 110,\r\n    FIND_CONSTRUCTION_SITES: 111,\r\n    FIND_MY_SPAWNS: 112,\r\n    FIND_HOSTILE_SPAWNS: 113,\r\n    FIND_MY_CONSTRUCTION_SITES: 114,\r\n    FIND_HOSTILE_CONSTRUCTION_SITES: 115,\r\n    FIND_MINERALS: 116,\r\n    FIND_NUKES: 117,\r\n    FIND_TOMBSTONES: 118,\r\n\r\n    TOP: 1,\r\n    TOP_RIGHT: 2,\r\n    RIGHT: 3,\r\n    BOTTOM_RIGHT: 4,\r\n    BOTTOM: 5,\r\n    BOTTOM_LEFT: 6,\r\n    LEFT: 7,\r\n    TOP_LEFT: 8,\r\n\r\n    COLOR_RED: 1,\r\n    COLOR_PURPLE: 2,\r\n    COLOR_BLUE: 3,\r\n    COLOR_CYAN: 4,\r\n    COLOR_GREEN: 5,\r\n    COLOR_YELLOW: 6,\r\n    COLOR_ORANGE: 7,\r\n    COLOR_BROWN: 8,\r\n    COLOR_GREY: 9,\r\n    COLOR_WHITE: 10,\r\n\r\n    LOOK_CREEPS: \"creep\",\r\n    LOOK_ENERGY: \"energy\",\r\n    LOOK_RESOURCES: \"resource\",\r\n    LOOK_SOURCES: \"source\",\r\n    LOOK_MINERALS: \"mineral\",\r\n    LOOK_STRUCTURES: \"structure\",\r\n    LOOK_FLAGS: \"flag\",\r\n    LOOK_CONSTRUCTION_SITES: \"constructionSite\",\r\n    LOOK_NUKES: \"nuke\",\r\n    LOOK_TERRAIN: \"terrain\",\r\n    LOOK_TOMBSTONES: \"tombstone\",\r\n\r\n    OBSTACLE_OBJECT_TYPES: [\"spawn\", \"creep\", \"wall\", \"source\", \"constructedWall\", \"extension\", \"link\", \"storage\", \"tower\", \"observer\", \"powerSpawn\", \"powerBank\", \"lab\", \"terminal\",\"nuker\"],\r\n\r\n    MOVE: \"move\",\r\n    WORK: \"work\",\r\n    CARRY: \"carry\",\r\n    ATTACK: \"attack\",\r\n    RANGED_ATTACK: \"ranged_attack\",\r\n    TOUGH: \"tough\",\r\n    HEAL: \"heal\",\r\n    CLAIM: \"claim\",\r\n\r\n    BODYPART_COST: {\r\n        \"move\": 50,\r\n        \"work\": 100,\r\n        \"attack\": 80,\r\n        \"carry\": 50,\r\n        \"heal\": 250,\r\n        \"ranged_attack\": 150,\r\n        \"tough\": 10,\r\n        \"claim\": 600\r\n    },\r\n\r\n    // WORLD_WIDTH and WORLD_HEIGHT constants are deprecated, please use Game.map.getWorldSize() instead\r\n    WORLD_WIDTH: 202,\r\n    WORLD_HEIGHT: 202,\r\n\r\n    CREEP_LIFE_TIME: 1500,\r\n    CREEP_CLAIM_LIFE_TIME: 600,\r\n    CREEP_CORPSE_RATE: 0.2,\r\n\r\n    CARRY_CAPACITY: 50,\r\n    HARVEST_POWER: 2,\r\n    HARVEST_MINERAL_POWER: 1,\r\n    REPAIR_POWER: 100,\r\n    DISMANTLE_POWER: 50,\r\n    BUILD_POWER: 5,\r\n    ATTACK_POWER: 30,\r\n    UPGRADE_CONTROLLER_POWER: 1,\r\n    RANGED_ATTACK_POWER: 10,\r\n    HEAL_POWER: 12,\r\n    RANGED_HEAL_POWER: 4,\r\n    REPAIR_COST: 0.01,\r\n    DISMANTLE_COST: 0.005,\r\n\r\n    RAMPART_DECAY_AMOUNT: 300,\r\n    RAMPART_DECAY_TIME: 100,\r\n    RAMPART_HITS: 1,\r\n    RAMPART_HITS_MAX: {2: 300000, 3: 1000000, 4: 3000000, 5: 10000000, 6: 30000000, 7: 100000000, 8: 300000000},\r\n\r\n    ENERGY_REGEN_TIME: 300,\r\n    ENERGY_DECAY: 1000,\r\n\r\n    SPAWN_HITS: 5000,\r\n    SPAWN_ENERGY_START: 300,\r\n    SPAWN_ENERGY_CAPACITY: 300,\r\n    CREEP_SPAWN_TIME: 3,\r\n    SPAWN_RENEW_RATIO: 1.2,\r\n\r\n    SOURCE_ENERGY_CAPACITY: 3000,\r\n    SOURCE_ENERGY_NEUTRAL_CAPACITY: 1500,\r\n    SOURCE_ENERGY_KEEPER_CAPACITY: 4000,\r\n\r\n    WALL_HITS: 1,\r\n    WALL_HITS_MAX: 300000000,\r\n\r\n    EXTENSION_HITS: 1000,\r\n    EXTENSION_ENERGY_CAPACITY: {0: 50, 1: 50, 2: 50, 3: 50, 4: 50, 5: 50, 6: 50, 7: 100, 8: 200},\r\n\r\n    ROAD_HITS: 5000,\r\n    ROAD_WEAROUT: 1,\r\n    ROAD_DECAY_AMOUNT: 100,\r\n    ROAD_DECAY_TIME: 1000,\r\n\r\n    LINK_HITS: 1000,\r\n    LINK_HITS_MAX: 1000,\r\n    LINK_CAPACITY: 800,\r\n    LINK_COOLDOWN: 1,\r\n    LINK_LOSS_RATIO: 0.03,\r\n\r\n    STORAGE_CAPACITY: 1000000,\r\n    STORAGE_HITS: 10000,\r\n\r\n    STRUCTURE_SPAWN: \"spawn\",\r\n    STRUCTURE_EXTENSION: \"extension\",\r\n    STRUCTURE_ROAD: \"road\",\r\n    STRUCTURE_WALL: \"constructedWall\",\r\n    STRUCTURE_RAMPART: \"rampart\",\r\n    STRUCTURE_KEEPER_LAIR: \"keeperLair\",\r\n    STRUCTURE_PORTAL: \"portal\",\r\n    STRUCTURE_CONTROLLER: \"controller\",\r\n    STRUCTURE_LINK: \"link\",\r\n    STRUCTURE_STORAGE: \"storage\",\r\n    STRUCTURE_TOWER: \"tower\",\r\n    STRUCTURE_OBSERVER: \"observer\",\r\n    STRUCTURE_POWER_BANK: \"powerBank\",\r\n    STRUCTURE_POWER_SPAWN: \"powerSpawn\",\r\n    STRUCTURE_EXTRACTOR: \"extractor\",\r\n    STRUCTURE_LAB: \"lab\",\r\n    STRUCTURE_TERMINAL: \"terminal\",\r\n    STRUCTURE_CONTAINER: \"container\",\r\n    STRUCTURE_NUKER: \"nuker\",\r\n\r\n    CONSTRUCTION_COST: {\r\n        \"spawn\": 15000,\r\n        \"extension\": 3000,\r\n        \"road\": 300,\r\n        \"constructedWall\": 1,\r\n        \"rampart\": 1,\r\n        \"link\": 5000,\r\n        \"storage\": 30000,\r\n        \"tower\": 5000,\r\n        \"observer\": 8000,\r\n        \"powerSpawn\": 100000,\r\n        \"extractor\": 5000,\r\n        \"lab\": 50000,\r\n        \"terminal\": 100000,\r\n        \"container\": 5000,\r\n        \"nuker\": 100000\r\n    },\r\n    CONSTRUCTION_COST_ROAD_SWAMP_RATIO: 5,\r\n\r\n    CONTROLLER_LEVELS: {1: 200, 2: 45000, 3: 135000, 4: 405000, 5: 1215000, 6: 3645000, 7: 10935000},\r\n    CONTROLLER_STRUCTURES: {\r\n        \"spawn\": {0: 0, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 2, 8: 3},\r\n        \"extension\": {0: 0, 1: 0, 2: 5, 3: 10, 4: 20, 5: 30, 6: 40, 7: 50, 8: 60},\r\n        \"link\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 2, 6: 3, 7: 4, 8: 6},\r\n        \"road\": {0: 2500, 1: 2500, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\r\n        \"constructedWall\": {1: 0, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\r\n        \"rampart\": {1: 0, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\r\n        \"storage\": {1: 0, 2: 0, 3: 0, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1},\r\n        \"tower\": {1: 0, 2: 0, 3: 1, 4: 1, 5: 2, 6: 2, 7: 3, 8: 6},\r\n        \"observer\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1},\r\n        \"powerSpawn\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1},\r\n        \"extractor\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1},\r\n        \"terminal\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1},\r\n        \"lab\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 3, 7: 6, 8: 10},\r\n        \"container\": {0: 5, 1: 5, 2: 5, 3: 5, 4: 5, 5: 5, 6: 5, 7: 5, 8: 5},\r\n        \"nuker\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1}\r\n    },\r\n    CONTROLLER_DOWNGRADE: {1: 20000, 2: 5000, 3: 10000, 4: 20000, 5: 40000, 6: 60000, 7: 100000, 8: 150000},\r\n    CONTROLLER_DOWNGRADE_RESTORE: 100,\r\n    CONTROLLER_DOWNGRADE_SAFEMODE_THRESHOLD: 5000,\r\n    CONTROLLER_CLAIM_DOWNGRADE: 300,\r\n    CONTROLLER_RESERVE: 1,\r\n    CONTROLLER_RESERVE_MAX: 5000,\r\n    CONTROLLER_MAX_UPGRADE_PER_TICK: 15,\r\n    CONTROLLER_ATTACK_BLOCKED_UPGRADE: 1000,\r\n    CONTROLLER_NUKE_BLOCKED_UPGRADE: 200,\r\n\r\n    SAFE_MODE_DURATION: 20000,\r\n    SAFE_MODE_COOLDOWN: 50000,\r\n    SAFE_MODE_COST: 1000,\r\n\r\n    TOWER_HITS: 3000,\r\n    TOWER_CAPACITY: 1000,\r\n    TOWER_ENERGY_COST: 10,\r\n    TOWER_POWER_ATTACK: 600,\r\n    TOWER_POWER_HEAL: 400,\r\n    TOWER_POWER_REPAIR: 800,\r\n    TOWER_OPTIMAL_RANGE: 5,\r\n    TOWER_FALLOFF_RANGE: 20,\r\n    TOWER_FALLOFF: 0.75,\r\n\r\n    OBSERVER_HITS: 500,\r\n    OBSERVER_RANGE: 10,\r\n\r\n    POWER_BANK_HITS: 2000000,\r\n    POWER_BANK_CAPACITY_MAX: 5000,\r\n    POWER_BANK_CAPACITY_MIN: 500,\r\n    POWER_BANK_CAPACITY_CRIT: 0.3,\r\n    POWER_BANK_DECAY: 5000,\r\n    POWER_BANK_HIT_BACK: 0.5,\r\n\r\n    POWER_SPAWN_HITS: 5000,\r\n    POWER_SPAWN_ENERGY_CAPACITY: 5000,\r\n    POWER_SPAWN_POWER_CAPACITY: 100,\r\n    POWER_SPAWN_ENERGY_RATIO: 50,\r\n\r\n    EXTRACTOR_HITS: 500,\r\n    EXTRACTOR_COOLDOWN: 5,\r\n\r\n    LAB_HITS: 500,\r\n    LAB_MINERAL_CAPACITY: 3000,\r\n    LAB_ENERGY_CAPACITY: 2000,\r\n    LAB_BOOST_ENERGY: 20,\r\n    LAB_BOOST_MINERAL: 30,\r\n    LAB_COOLDOWN: 10,               // not used\r\n    LAB_REACTION_AMOUNT: 5,\r\n\r\n    GCL_POW: 2.4,\r\n    GCL_MULTIPLY: 1000000,\r\n    GCL_NOVICE: 3,\r\n\r\n    MODE_SIMULATION: null,\r\n    MODE_WORLD: null,\r\n\r\n    TERRAIN_MASK_WALL: 1,\r\n    TERRAIN_MASK_SWAMP: 2,\r\n    TERRAIN_MASK_LAVA: 4,\r\n\r\n    MAX_CONSTRUCTION_SITES: 100,\r\n    MAX_CREEP_SIZE: 50,\r\n\r\n    MINERAL_REGEN_TIME: 50000,\r\n    MINERAL_MIN_AMOUNT: {\r\n        \"H\": 35000,\r\n        \"O\": 35000,\r\n        \"L\": 35000,\r\n        \"K\": 35000,\r\n        \"Z\": 35000,\r\n        \"U\": 35000,\r\n        \"X\": 35000\r\n    },\r\n    MINERAL_RANDOM_FACTOR: 2,\r\n\r\n    MINERAL_DENSITY: {\r\n        1: 15000,\r\n        2: 35000,\r\n        3: 70000,\r\n        4: 100000\r\n    },\r\n    MINERAL_DENSITY_PROBABILITY  : {\r\n        1: 0.1,\r\n        2: 0.5,\r\n        3: 0.9,\r\n        4: 1.0\r\n    },\r\n    MINERAL_DENSITY_CHANGE: 0.05,\r\n\r\n    DENSITY_LOW: 1,\r\n    DENSITY_MODERATE: 2,\r\n    DENSITY_HIGH: 3,\r\n    DENSITY_ULTRA: 4,\r\n\r\n    TERMINAL_CAPACITY: 300000,\r\n    TERMINAL_HITS: 3000,\r\n    TERMINAL_SEND_COST: 0.1,\r\n    TERMINAL_MIN_SEND: 100,\r\n    TERMINAL_COOLDOWN: 10,\r\n\r\n    CONTAINER_HITS: 250000,\r\n    CONTAINER_CAPACITY: 2000,\r\n    CONTAINER_DECAY: 5000,\r\n    CONTAINER_DECAY_TIME: 100,\r\n    CONTAINER_DECAY_TIME_OWNED: 500,\r\n\r\n    NUKER_HITS: 1000,\r\n    NUKER_COOLDOWN: 100000,\r\n    NUKER_ENERGY_CAPACITY: 300000,\r\n    NUKER_GHODIUM_CAPACITY: 5000,\r\n    NUKE_LAND_TIME: 50000,\r\n    NUKE_RANGE: 10,\r\n    NUKE_DAMAGE: {\r\n        0: 10000000,\r\n        2: 5000000\r\n    },\r\n\r\n    TOMBSTONE_DECAY_PER_PART: 5,\r\n\r\n    PORTAL_DECAY: 30000,\r\n\r\n    ORDER_SELL: \"sell\",\r\n    ORDER_BUY: \"buy\",\r\n\r\n    MARKET_FEE: 0.05,\r\n\r\n    FLAGS_LIMIT: 10000,\r\n\r\n    SUBSCRIPTION_TOKEN: \"token\",\r\n\r\n    RESOURCE_ENERGY: \"energy\",\r\n    RESOURCE_POWER: \"power\",\r\n\r\n    RESOURCE_HYDROGEN: \"H\",\r\n    RESOURCE_OXYGEN: \"O\",\r\n    RESOURCE_UTRIUM: \"U\",\r\n    RESOURCE_LEMERGIUM: \"L\",\r\n    RESOURCE_KEANIUM: \"K\",\r\n    RESOURCE_ZYNTHIUM: \"Z\",\r\n    RESOURCE_CATALYST: \"X\",\r\n    RESOURCE_GHODIUM: \"G\",\r\n\r\n    RESOURCE_HYDROXIDE: \"OH\",\r\n    RESOURCE_ZYNTHIUM_KEANITE: \"ZK\",\r\n    RESOURCE_UTRIUM_LEMERGITE: \"UL\",\r\n\r\n    RESOURCE_UTRIUM_HYDRIDE: \"UH\",\r\n    RESOURCE_UTRIUM_OXIDE: \"UO\",\r\n    RESOURCE_KEANIUM_HYDRIDE: \"KH\",\r\n    RESOURCE_KEANIUM_OXIDE: \"KO\",\r\n    RESOURCE_LEMERGIUM_HYDRIDE: \"LH\",\r\n    RESOURCE_LEMERGIUM_OXIDE: \"LO\",\r\n    RESOURCE_ZYNTHIUM_HYDRIDE: \"ZH\",\r\n    RESOURCE_ZYNTHIUM_OXIDE: \"ZO\",\r\n    RESOURCE_GHODIUM_HYDRIDE: \"GH\",\r\n    RESOURCE_GHODIUM_OXIDE: \"GO\",\r\n\r\n    RESOURCE_UTRIUM_ACID: \"UH2O\",\r\n    RESOURCE_UTRIUM_ALKALIDE: \"UHO2\",\r\n    RESOURCE_KEANIUM_ACID: \"KH2O\",\r\n    RESOURCE_KEANIUM_ALKALIDE: \"KHO2\",\r\n    RESOURCE_LEMERGIUM_ACID: \"LH2O\",\r\n    RESOURCE_LEMERGIUM_ALKALIDE: \"LHO2\",\r\n    RESOURCE_ZYNTHIUM_ACID: \"ZH2O\",\r\n    RESOURCE_ZYNTHIUM_ALKALIDE: \"ZHO2\",\r\n    RESOURCE_GHODIUM_ACID: \"GH2O\",\r\n    RESOURCE_GHODIUM_ALKALIDE: \"GHO2\",\r\n\r\n    RESOURCE_CATALYZED_UTRIUM_ACID: \"XUH2O\",\r\n    RESOURCE_CATALYZED_UTRIUM_ALKALIDE: \"XUHO2\",\r\n    RESOURCE_CATALYZED_KEANIUM_ACID: \"XKH2O\",\r\n    RESOURCE_CATALYZED_KEANIUM_ALKALIDE: \"XKHO2\",\r\n    RESOURCE_CATALYZED_LEMERGIUM_ACID: \"XLH2O\",\r\n    RESOURCE_CATALYZED_LEMERGIUM_ALKALIDE: \"XLHO2\",\r\n    RESOURCE_CATALYZED_ZYNTHIUM_ACID: \"XZH2O\",\r\n    RESOURCE_CATALYZED_ZYNTHIUM_ALKALIDE: \"XZHO2\",\r\n    RESOURCE_CATALYZED_GHODIUM_ACID: \"XGH2O\",\r\n    RESOURCE_CATALYZED_GHODIUM_ALKALIDE: \"XGHO2\",\r\n\r\n    REACTIONS: {\r\n        H: {\r\n            O: \"OH\",\r\n            L: \"LH\",\r\n            K: \"KH\",\r\n            U: \"UH\",\r\n            Z: \"ZH\",\r\n            G: \"GH\"\r\n        },\r\n        O: {\r\n            H: \"OH\",\r\n            L: \"LO\",\r\n            K: \"KO\",\r\n            U: \"UO\",\r\n            Z: \"ZO\",\r\n            G: \"GO\"\r\n        },\r\n        Z: {\r\n            K: \"ZK\",\r\n            H: \"ZH\",\r\n            O: \"ZO\"\r\n        },\r\n        L: {\r\n            U: \"UL\",\r\n            H: \"LH\",\r\n            O: \"LO\"\r\n        },\r\n        K: {\r\n            Z: \"ZK\",\r\n            H: \"KH\",\r\n            O: \"KO\"\r\n        },\r\n        G: {\r\n            H: \"GH\",\r\n            O: \"GO\"\r\n        },\r\n        U: {\r\n            L: \"UL\",\r\n            H: \"UH\",\r\n            O: \"UO\"\r\n        },\r\n        OH: {\r\n            UH: \"UH2O\",\r\n            UO: \"UHO2\",\r\n            ZH: \"ZH2O\",\r\n            ZO: \"ZHO2\",\r\n            KH: \"KH2O\",\r\n            KO: \"KHO2\",\r\n            LH: \"LH2O\",\r\n            LO: \"LHO2\",\r\n            GH: \"GH2O\",\r\n            GO: \"GHO2\"\r\n        },\r\n        X: {\r\n            UH2O: \"XUH2O\",\r\n            UHO2: \"XUHO2\",\r\n            LH2O: \"XLH2O\",\r\n            LHO2: \"XLHO2\",\r\n            KH2O: \"XKH2O\",\r\n            KHO2: \"XKHO2\",\r\n            ZH2O: \"XZH2O\",\r\n            ZHO2: \"XZHO2\",\r\n            GH2O: \"XGH2O\",\r\n            GHO2: \"XGHO2\"\r\n        },\r\n        ZK: {\r\n            UL: \"G\"\r\n        },\r\n        UL: {\r\n            ZK: \"G\"\r\n        },\r\n        LH: {\r\n            OH: \"LH2O\"\r\n        },\r\n        ZH: {\r\n            OH: \"ZH2O\"\r\n        },\r\n        GH: {\r\n            OH: \"GH2O\"\r\n        },\r\n        KH: {\r\n            OH: \"KH2O\"\r\n        },\r\n        UH: {\r\n            OH: \"UH2O\"\r\n        },\r\n        LO: {\r\n            OH: \"LHO2\"\r\n        },\r\n        ZO: {\r\n            OH: \"ZHO2\"\r\n        },\r\n        KO: {\r\n            OH: \"KHO2\"\r\n        },\r\n        UO: {\r\n            OH: \"UHO2\"\r\n        },\r\n        GO: {\r\n            OH: \"GHO2\"\r\n        },\r\n        LH2O: {\r\n            X: \"XLH2O\"\r\n        },\r\n        KH2O: {\r\n            X: \"XKH2O\"\r\n        },\r\n        ZH2O: {\r\n            X: \"XZH2O\"\r\n        },\r\n        UH2O: {\r\n            X: \"XUH2O\"\r\n        },\r\n        GH2O: {\r\n            X: \"XGH2O\"\r\n        },\r\n        LHO2: {\r\n            X: \"XLHO2\"\r\n        },\r\n        UHO2: {\r\n            X: \"XUHO2\"\r\n        },\r\n        KHO2: {\r\n            X: \"XKHO2\"\r\n        },\r\n        ZHO2: {\r\n            X: \"XZHO2\"\r\n        },\r\n        GHO2: {\r\n            X: \"XGHO2\"\r\n        }\r\n    },\r\n\r\n    BOOSTS: {\r\n        work: {\r\n            UO: {\r\n                harvest: 3\r\n            },\r\n            UHO2: {\r\n                harvest: 5\r\n            },\r\n            XUHO2: {\r\n                harvest: 7\r\n            },\r\n            LH: {\r\n                build: 1.5,\r\n                repair: 1.5\r\n            },\r\n            LH2O: {\r\n                build: 1.8,\r\n                repair: 1.8\r\n            },\r\n            XLH2O: {\r\n                build: 2,\r\n                repair: 2\r\n            },\r\n            ZH: {\r\n                dismantle: 2\r\n            },\r\n            ZH2O: {\r\n                dismantle: 3\r\n            },\r\n            XZH2O: {\r\n                dismantle: 4\r\n            },\r\n            GH: {\r\n                upgradeController: 1.5\r\n            },\r\n            GH2O: {\r\n                upgradeController: 1.8\r\n            },\r\n            XGH2O: {\r\n                upgradeController: 2\r\n            }\r\n        },\r\n        attack: {\r\n            UH: {\r\n                attack: 2\r\n            },\r\n            UH2O: {\r\n                attack: 3\r\n            },\r\n            XUH2O: {\r\n                attack: 4\r\n            }\r\n        },\r\n        ranged_attack: {\r\n            KO: {\r\n                rangedAttack: 2,\r\n                rangedMassAttack: 2\r\n            },\r\n            KHO2: {\r\n                rangedAttack: 3,\r\n                rangedMassAttack: 3\r\n            },\r\n            XKHO2: {\r\n                rangedAttack: 4,\r\n                rangedMassAttack: 4\r\n            }\r\n        },\r\n        heal: {\r\n            LO: {\r\n                heal: 2,\r\n                rangedHeal: 2\r\n            },\r\n            LHO2: {\r\n                heal: 3,\r\n                rangedHeal: 3\r\n            },\r\n            XLHO2: {\r\n                heal: 4,\r\n                rangedHeal: 4\r\n            }\r\n        },\r\n        carry: {\r\n            KH: {\r\n                capacity: 2\r\n            },\r\n            KH2O: {\r\n                capacity: 3\r\n            },\r\n            XKH2O: {\r\n                capacity: 4\r\n            }\r\n        },\r\n        move: {\r\n            ZO: {\r\n                fatigue: 2\r\n            },\r\n            ZHO2: {\r\n                fatigue: 3\r\n            },\r\n            XZHO2: {\r\n                fatigue: 4\r\n            }\r\n        },\r\n        tough: {\r\n            GO: {\r\n                damage: .7\r\n            },\r\n            GHO2: {\r\n                damage: .5\r\n            },\r\n            XGHO2: {\r\n                damage: .3\r\n            }\r\n        }\r\n    },\r\n\r\n    REACTION_TIME: {\r\n        OH: 20,\r\n        ZK: 5,\r\n        UL: 5,\r\n        G: 5,\r\n        UH: 10,\r\n        UH2O: 5,\r\n        XUH2O: 60,\r\n        UO: 10,\r\n        UHO2: 5,\r\n        XUHO2: 60,\r\n        KH: 10,\r\n        KH2O: 5,\r\n        XKH2O: 60,\r\n        KO: 10,\r\n        KHO2: 5,\r\n        XKHO2: 60,\r\n        LH: 15,\r\n        LH2O: 10,\r\n        XLH2O: 65,\r\n        LO: 10,\r\n        LHO2: 5,\r\n        XLHO2: 60,\r\n        ZH: 20,\r\n        ZH2O: 40,\r\n        XZH2O: 160,\r\n        ZO: 10,\r\n        ZHO2: 5,\r\n        XZHO2: 60,\r\n        GH: 10,\r\n        GH2O: 15,\r\n        XGH2O: 80,\r\n        GO: 10,\r\n        GHO2: 30,\r\n        XGHO2: 150,\r\n    },\r\n\r\n    PORTAL_UNSTABLE: 10*24*3600*1000,\r\n    PORTAL_MIN_TIMEOUT: 12*24*3600*1000,\r\n    PORTAL_MAX_TIMEOUT: 22*24*3600*1000,\r\n\r\n    POWER_BANK_RESPAWN_TIME: 50000,\r\n\r\n    INVADERS_ENERGY_GOAL: 100000,\r\n\r\n    SYSTEM_USERNAME: 'Screeps',\r\n\r\n    SIGN_NOVICE_AREA: 'A new Novice Area is being planned somewhere in this sector. Please make sure all important rooms are reserved.',\r\n    SIGN_RESPAWN_AREA: 'A new Respawn Area is being planned somewhere in this sector. Please make sure all important rooms are reserved.'\r\n};\r\n\r\n\r\nmodule.exports.BODYPARTS_ALL = [\r\n    module.exports.MOVE,\r\n    module.exports.WORK,\r\n    module.exports.CARRY,\r\n    module.exports.ATTACK,\r\n    module.exports.RANGED_ATTACK,\r\n    module.exports.TOUGH,\r\n    module.exports.HEAL,\r\n    module.exports.CLAIM\r\n];\r\n\r\nmodule.exports.RESOURCES_ALL = [\r\n    module.exports.RESOURCE_ENERGY,\r\n    module.exports.RESOURCE_POWER,\r\n\r\n    module.exports.RESOURCE_HYDROGEN,\r\n    module.exports.RESOURCE_OXYGEN,\r\n    module.exports.RESOURCE_UTRIUM,\r\n    module.exports.RESOURCE_KEANIUM,\r\n    module.exports.RESOURCE_LEMERGIUM,\r\n    module.exports.RESOURCE_ZYNTHIUM,\r\n    module.exports.RESOURCE_CATALYST,\r\n    module.exports.RESOURCE_GHODIUM,\r\n\r\n    module.exports.RESOURCE_HYDROXIDE,\r\n    module.exports.RESOURCE_ZYNTHIUM_KEANITE,\r\n    module.exports.RESOURCE_UTRIUM_LEMERGITE,\r\n\r\n    module.exports.RESOURCE_UTRIUM_HYDRIDE,\r\n    module.exports.RESOURCE_UTRIUM_OXIDE,\r\n    module.exports.RESOURCE_KEANIUM_HYDRIDE,\r\n    module.exports.RESOURCE_KEANIUM_OXIDE,\r\n    module.exports.RESOURCE_LEMERGIUM_HYDRIDE,\r\n    module.exports.RESOURCE_LEMERGIUM_OXIDE,\r\n    module.exports.RESOURCE_ZYNTHIUM_HYDRIDE,\r\n    module.exports.RESOURCE_ZYNTHIUM_OXIDE,\r\n    module.exports.RESOURCE_GHODIUM_HYDRIDE,\r\n    module.exports.RESOURCE_GHODIUM_OXIDE,\r\n\r\n    module.exports.RESOURCE_UTRIUM_ACID,\r\n    module.exports.RESOURCE_UTRIUM_ALKALIDE,\r\n    module.exports.RESOURCE_KEANIUM_ACID,\r\n    module.exports.RESOURCE_KEANIUM_ALKALIDE,\r\n    module.exports.RESOURCE_LEMERGIUM_ACID,\r\n    module.exports.RESOURCE_LEMERGIUM_ALKALIDE,\r\n    module.exports.RESOURCE_ZYNTHIUM_ACID,\r\n    module.exports.RESOURCE_ZYNTHIUM_ALKALIDE,\r\n    module.exports.RESOURCE_GHODIUM_ACID,\r\n    module.exports.RESOURCE_GHODIUM_ALKALIDE,\r\n\r\n    module.exports.RESOURCE_CATALYZED_UTRIUM_ACID,\r\n    module.exports.RESOURCE_CATALYZED_UTRIUM_ALKALIDE,\r\n    module.exports.RESOURCE_CATALYZED_KEANIUM_ACID,\r\n    module.exports.RESOURCE_CATALYZED_KEANIUM_ALKALIDE,\r\n    module.exports.RESOURCE_CATALYZED_LEMERGIUM_ACID,\r\n    module.exports.RESOURCE_CATALYZED_LEMERGIUM_ALKALIDE,\r\n    module.exports.RESOURCE_CATALYZED_ZYNTHIUM_ACID,\r\n    module.exports.RESOURCE_CATALYZED_ZYNTHIUM_ALKALIDE,\r\n    module.exports.RESOURCE_CATALYZED_GHODIUM_ACID,\r\n    module.exports.RESOURCE_CATALYZED_GHODIUM_ALKALIDE\r\n];\r\n\r\nmodule.exports.COLORS_ALL = [\r\n    module.exports.COLOR_RED,\r\n    module.exports.COLOR_PURPLE,\r\n    module.exports.COLOR_BLUE,\r\n    module.exports.COLOR_CYAN,\r\n    module.exports.COLOR_GREEN,\r\n    module.exports.COLOR_YELLOW,\r\n    module.exports.COLOR_ORANGE,\r\n    module.exports.COLOR_BROWN,\r\n    module.exports.COLOR_GREY,\r\n    module.exports.COLOR_WHITE\r\n];\r\n","/**\r\n * Created by vedi on 19/03/2017.\r\n */\r\n\r\nexport default (duration = { $processorParam: 'tickDuration' }) => ({\r\n    action: 'FadeIn',\r\n    params: [duration],\r\n});\r\n","/**\r\n * Created by vedi on 19/03/2017.\r\n */\r\n\r\nexport default (fromAlpha, toAlpha, toDuration, fromDuration) => ({\r\n    action: 'Sequence',\r\n    params: [[\r\n        {\r\n            action: 'AlphaTo',\r\n            params: [fromAlpha, 0],\r\n        },\r\n        {\r\n            action: 'Repeat',\r\n            params: [{\r\n                action: 'Sequence',\r\n                params: [\r\n                    [\r\n                        {\r\n                            action: 'AlphaTo',\r\n                            params: [toAlpha, toDuration],\r\n                        },\r\n                        {\r\n                            action: 'AlphaTo',\r\n                            params: [fromAlpha, fromDuration],\r\n                        },\r\n                    ],\r\n                ],\r\n            }],\r\n        },\r\n    ]],\r\n});\r\n","export default (type, additionalWhen) => ({\r\n    type: 'text',\r\n    once: true,\r\n    layer: 'effects',\r\n    when: (params) => {\r\n        const {\r\n            calcs: { isOwner },\r\n            stateExtra: { gameData: { showEnemyNames, showMyNames } },\r\n        } = params;\r\n        return ((isOwner && showMyNames[type]) || (!isOwner && showEnemyNames[type])) &&\r\n            (!additionalWhen || additionalWhen(params));\r\n    },\r\n    payload: {\r\n        text: { $calc: 'displayName' },\r\n        style: {\r\n            align: 'center',\r\n            fill: { $calc: 'playerColorHex' },\r\n            fontFamily: 'Roboto, sans-serif',\r\n            fontSize: 55,\r\n            stroke: '#111',\r\n            strokeThickness: 15,\r\n        },\r\n        anchor: {\r\n            x: 0.5,\r\n            y: 1.7,\r\n        },\r\n    },\r\n});\r\n","export default (alpha1, alpha2, alpha3, alpha4) => ({\r\n    action: 'Spawn',\r\n    params: [[\r\n        {\r\n            action: 'Repeat',\r\n            params: [{\r\n                action: 'Sequence',\r\n                params: [[\r\n                    {\r\n                        action: 'ScaleTo',\r\n                        params: [\r\n                            { $rel: 'scale.x', koef: 1.2 },\r\n                            { $rel: 'scale.y', koef: 1.2 },\r\n                            1,\r\n                        ],\r\n                    },\r\n                    {\r\n                        action: 'ScaleTo',\r\n                        params: [\r\n                            { $rel: 'scale.x' },\r\n                            { $rel: 'scale.y' },\r\n                            1,\r\n                        ],\r\n                    },\r\n                ]],\r\n            }],\r\n        },\r\n        {\r\n            action: 'Repeat',\r\n            params: [{\r\n                action: 'Sequence',\r\n                params: [[\r\n                    {\r\n                        action: 'AlphaTo',\r\n                        params: [alpha1, 0.1],\r\n                    },\r\n                    {\r\n                        action: 'AlphaTo',\r\n                        params: [alpha2, 0.2],\r\n                    },\r\n                    {\r\n                        action: 'DelayTime',\r\n                        params: [{ $random: 2 }],\r\n                    },\r\n                    {\r\n                        action: 'AlphaTo',\r\n                        params: [alpha3, 0.2],\r\n                    },\r\n                    {\r\n                        action: 'AlphaTo',\r\n                        params: [alpha4, 2.8],\r\n                    },\r\n                ]],\r\n            }],\r\n        },\r\n    ]],\r\n});\r\n","/**\r\n * Created by vedi on 13/09/2017.\r\n */\r\n\r\nimport { blinking } from '../action-templates';\r\n\r\nconst CELL_SIZE = 100;\r\n\r\nexport default {\r\n    data: {\r\n        x: { $state: 'x', koef: CELL_SIZE },\r\n        y: { $state: 'y', koef: CELL_SIZE },\r\n    },\r\n    calculations: [\r\n        {\r\n            id: 'isOwner',\r\n            props: ['user'],\r\n            func: ({ state: { user }, stateExtra: { gameData: { player } } }) =>\r\n                // eslint-disable-next-line eqeqeq\r\n                (user === undefined ? undefined : player == user),\r\n        },\r\n        {\r\n            id: 'playerColor',\r\n            props: ['user'],\r\n            func: ({ calcs: { isOwner } }) => {\r\n                if (isOwner === undefined) {\r\n                    return 0xBBBBBB;\r\n                } else if (isOwner) {\r\n                    return 0x8fbb93;\r\n                } else {\r\n                    return 0xFF7777;\r\n                }\r\n            },\r\n        },\r\n        {\r\n            id: 'playerColorHex',\r\n            props: ['user'],\r\n            func: ({ calcs: { isOwner } }) =>\r\n                (isOwner ? '#8fbb93' : '#FF7777'),\r\n        },\r\n        {\r\n            id: 'playerColorIntense',\r\n            props: ['user'],\r\n            func: ({ calcs: { isOwner } }) =>\r\n                (isOwner ? 0x00ff00 : 0x00ff00),\r\n        },\r\n        {\r\n            id: 'viewBox',\r\n            func: ({ world: { options: { VIEW_BOX } } }) => VIEW_BOX,\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            when: ({ state: { _isDisabled } }) => !!_isDisabled,\r\n            layer: 'effects',\r\n            payload: {\r\n                drawings: [\r\n                    { method: 'beginFill', params: [0xFF0000] },\r\n                    {\r\n                        method: 'drawRect',\r\n                        params: [-50, -50, 100, 100],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n                blendMode: 1,\r\n            },\r\n            actions: [blinking(0, 0.5, 0.3, 1.5)],\r\n        },\r\n    ],\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport { blinking } from '../action-templates';\r\n\r\nexport default {\r\n    texture: 'constructedWall',\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            payload: {\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            when: ({ state: { hits, hitsMax } }) => hits === 1 && hitsMax > 1,\r\n            layer: 'effects',\r\n            payload: {\r\n                drawings: [\r\n                    { method: 'beginFill', params: [0xFF0000] },\r\n                    {\r\n                        method: 'drawRect',\r\n                        params: [-50, -50, 100, 100],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n                blendMode: 1,\r\n            },\r\n            actions: [blinking(0, 0.2, 0.3, 1.5)],\r\n        },\r\n    ],\r\n    zIndex: 0,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport { blinking } from '../action-templates';\r\n\r\nexport default {\r\n    texture: 'constructionSite',\r\n    processors: [\r\n        {\r\n            id: 'siteProgress',\r\n            type: 'siteProgress',\r\n            layer: 'effects',\r\n            props: ['progress', 'progressTotal'],\r\n            payload: {\r\n                color: { $calc: 'playerColor' },\r\n                radius: 20,\r\n                lineWidth: 10,\r\n                progressTotal: { $state: 'progressTotal' },\r\n            },\r\n            actions: [blinking(0.8, 0.3, 1, 1)],\r\n        },\r\n    ],\r\n    disappearProcessor: { type: 'disappear' },\r\n    zIndex: 18,\r\n};\r\n","/**\r\n * Created by vedi on 19/03/2017.\r\n */\r\n\r\nimport constants from '@screeps/common/lib/constants';\r\n\r\nexport default () => {\r\n    const { RESOURCES_ALL } = constants;\r\n    return ({\r\n        id: 'resourcesTotal',\r\n        func: ({ state }) => {\r\n            let resourcesTotal = 0;\r\n            RESOURCES_ALL.forEach((resourceName) => {\r\n                if (state[resourceName]) {\r\n                    resourcesTotal += state[resourceName];\r\n                }\r\n            });\r\n            return resourcesTotal;\r\n        },\r\n    });\r\n};\r\n","/**\r\n * Created by vedi on 19/04/2017.\r\n */\r\n\r\nimport { resourceTotal } from '../calculation-templates';\r\n\r\nexport default {\r\n    texture: 'rectangle',\r\n    calculations: [\r\n        resourceTotal(),\r\n        {\r\n            id: 'energyBackgroundHeight',\r\n            func: ({ state: { energyCapacity }, calcs: { resourcesTotal } }) =>\r\n                (resourcesTotal * 50) / (energyCapacity || resourcesTotal),\r\n        },\r\n        {\r\n            id: 'energyHeight',\r\n            func: ({ state: { energy = 0, energyCapacity }, calcs: { resourcesTotal } }) =>\r\n                (energy * 50) / (energyCapacity || resourcesTotal),\r\n        },\r\n        {\r\n            id: 'powerHeight',\r\n            func: ({ state: { energy = 0, energyCapacity, power = 0 },\r\n                calcs: { resourcesTotal } }) =>\r\n                ((power + energy) * 50) / (energyCapacity || resourcesTotal),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            id: 'border',\r\n            once: true,\r\n            payload: {\r\n                width: 60,\r\n                height: 70,\r\n                tint: 0x181818,\r\n            },\r\n        },\r\n        {\r\n            id: 'internalBorder',\r\n            type: 'sprite',\r\n            once: true,\r\n            payload: {\r\n                width: 40,\r\n                height: 50,\r\n                tint: 0x5555555,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            id: 'otherResourcesBar',\r\n            props: ['energy', 'power', 'energyBackgroundHeight', 'resourcesTotal'],\r\n            shouldRun: ({ state: { power = 0, energy = 0 }, calcs: { resourcesTotal } }) =>\r\n                energy + power < resourcesTotal,\r\n            payload: {\r\n                pivot: {\r\n                    y: { $calc: 'energyBackgroundHeight' },\r\n                },\r\n                y: 25,\r\n                width: 40,\r\n                height: { $calc: 'energyBackgroundHeight' },\r\n                tint: 0xffffff,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            id: 'powerBar',\r\n            props: ['energy', 'power', 'resourcesTotal'],\r\n            shouldRun: ({ state: { power = 0 } }) => power > 0,\r\n            payload: {\r\n                pivot: {\r\n                    y: { $calc: 'powerHeight' },\r\n                },\r\n                y: 25,\r\n                width: 40,\r\n                height: { $calc: 'powerHeight' },\r\n                tint: 0xf41f33,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            id: 'energyBar',\r\n            props: ['energy', 'power', 'resourcesTotal'],\r\n            shouldRun: ({ state: { energy = 0 } }) => energy > 0,\r\n            payload: {\r\n                pivot: {\r\n                    y: { $calc: 'energyHeight' },\r\n                },\r\n                y: 25,\r\n                width: 40,\r\n                height: { $calc: 'energyHeight' },\r\n                tint: 0xffe56d,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            props: ['resourcesTotal'],\r\n            shouldRun: ({ calcs: { resourcesTotal } }) => resourcesTotal > 0,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 100,\r\n                height: 100,\r\n                alpha: 1,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 4,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport constants from '@screeps/common/lib/constants';\r\n\r\nimport { blinking } from '../action-templates';\r\n\r\nexport default {\r\n    texture: 'controller',\r\n    calculations: [\r\n        {\r\n            id: 'level1Visible',\r\n            props: ['level'],\r\n            func: ({ state: { level } }) => level >= 1,\r\n        },\r\n        {\r\n            id: 'level2Visible',\r\n            props: ['level'],\r\n            func: ({ state: { level } }) => level >= 2,\r\n        },\r\n        {\r\n            id: 'level3Visible',\r\n            props: ['level'],\r\n            func: ({ state: { level } }) => level >= 3,\r\n        },\r\n        {\r\n            id: 'level4Visible',\r\n            props: ['level'],\r\n            func: ({ state: { level } }) => level >= 4,\r\n        },\r\n        {\r\n            id: 'level5Visible',\r\n            props: ['level'],\r\n            func: ({ state: { level } }) => level >= 5,\r\n        },\r\n        {\r\n            id: 'level6Visible',\r\n            props: ['level'],\r\n            func: ({ state: { level } }) => level >= 6,\r\n        },\r\n        {\r\n            id: 'level7Visible',\r\n            props: ['level'],\r\n            func: ({ state: { level } }) => level >= 7,\r\n        },\r\n        {\r\n            id: 'level8Visible',\r\n            props: ['level'],\r\n            func: ({ state: { level } }) => level >= 8,\r\n        },\r\n        {\r\n            id: 'downgradeOpacity',\r\n            func: ({ state: { level, downgradeTime }, stateExtra: { gameTime } }) => {\r\n                const { CONTROLLER_DOWNGRADE } = constants;\r\n\r\n                if (!downgradeTime || !level || !gameTime) {\r\n                    return 0;\r\n                }\r\n                return (CONTROLLER_DOWNGRADE[level] - (downgradeTime - gameTime)) /\r\n                    CONTROLLER_DOWNGRADE[level];\r\n            },\r\n        },\r\n        {\r\n            id: 'progressTotal',\r\n            func: ({ state: { level } }) => {\r\n                const { CONTROLLER_LEVELS } = constants;\r\n                return CONTROLLER_LEVELS[level];\r\n            },\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                alpha: 0.05,\r\n                color: 0x33ff33,\r\n                radius: 110,\r\n            },\r\n            shouldRun: ({ state: { reservation }, stateExtra: { gameData: { player } } }) =>\r\n                reservation && reservation.user === player,\r\n            actions: [blinking(0.05, 0.4, 1, 1)],\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                alpha: 0.05,\r\n                color: 0xff3333,\r\n                radius: 110,\r\n            },\r\n            shouldRun: ({\r\n                state: { upgradeBlocked, reservation },\r\n                stateExtra: { gameTime, gameData: { player } },\r\n            }) =>\r\n                (upgradeBlocked && upgradeBlocked > gameTime) ||\r\n                (reservation && reservation.user !== player),\r\n            actions: [blinking(0.05, 0.4, 1, 1)],\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                alpha: 0.05,\r\n                color: 0xff3333,\r\n                radius: 110,\r\n            },\r\n            shouldRun: ({\r\n                state: { upgradeBlocked, reservation },\r\n                stateExtra: { gameTime, gameData: { player } },\r\n            }) =>\r\n                (upgradeBlocked && upgradeBlocked > gameTime) ||\r\n                (reservation && reservation.user !== player),\r\n            actions: [blinking(0.05, 0.4, 1, 1)],\r\n        },\r\n        {\r\n            id: 'safeMode1',\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                alpha: 0.05,\r\n                color: 0xffd180,\r\n                radius: 110,\r\n            },\r\n            shouldRun: ({ state: { safeMode }, stateExtra: { gameTime } }) =>\r\n                safeMode && safeMode > gameTime,\r\n            actions: [blinking(0.05, 0.4, 1, 1)],\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                alpha: 0.05,\r\n                color: 0xffffff,\r\n                radius: 92,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'effects',\r\n            once: true,\r\n            payload: {\r\n                texture: 'glow',\r\n                alpha: 0.1,\r\n                tint: 0xffd180,\r\n                width: 1,\r\n                height: 1,\r\n                blendMode: 1,\r\n            },\r\n            shouldRun: ({ state: { safeMode }, stateExtra: { gameTime } }) =>\r\n                safeMode && safeMode > gameTime,\r\n            actions: [\r\n                {\r\n                    action: 'Repeat',\r\n                    params: [{\r\n                        action: 'Sequence',\r\n                        params: [\r\n                            [\r\n                                {\r\n                                    action: 'Spawn',\r\n                                    params: [[\r\n                                        {\r\n                                            action: 'ScaleTo',\r\n                                            params: [50, 50, 1.5],\r\n                                        },\r\n                                        {\r\n                                            action: 'AlphaTo',\r\n                                            params: [0, 1.5],\r\n                                        },\r\n                                    ]],\r\n                                },\r\n                                {\r\n                                    action: 'Spawn',\r\n                                    params: [[\r\n                                        {\r\n                                            action: 'ScaleTo',\r\n                                            params: [0, 0, 0],\r\n                                        },\r\n                                        {\r\n                                            action: 'AlphaTo',\r\n                                            params: [0.05, 0],\r\n                                        },\r\n                                    ]],\r\n                                },\r\n                                {\r\n                                    action: 'DelayTime',\r\n                                    params: [6],\r\n                                },\r\n                            ],\r\n                        ],\r\n                    }],\r\n                },\r\n            ],\r\n        },\r\n\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            payload: {\r\n                tint: 0x000000,\r\n                width: 200,\r\n                height: 200,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['level1Visible'],\r\n            payload: {\r\n                texture: 'controller-level',\r\n                width: 100,\r\n                height: 100,\r\n                anchor: {\r\n                    y: 1,\r\n                },\r\n                visible: { $calc: 'level1Visible' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['level2Visible'],\r\n            payload: {\r\n                texture: 'controller-level',\r\n                width: 100,\r\n                height: 100,\r\n                anchor: {\r\n                    y: 1,\r\n                },\r\n                rotation: (2 * Math.PI) / 8,\r\n                visible: { $calc: 'level2Visible' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['level3Visible'],\r\n            payload: {\r\n                texture: 'controller-level',\r\n                width: 100,\r\n                height: 100,\r\n                anchor: {\r\n                    y: 1,\r\n                },\r\n                rotation: 2 * ((2 * Math.PI) / 8),\r\n                visible: { $calc: 'level3Visible' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['level4Visible'],\r\n            payload: {\r\n                texture: 'controller-level',\r\n                width: 100,\r\n                height: 100,\r\n                anchor: {\r\n                    y: 1,\r\n                },\r\n                rotation: 3 * ((2 * Math.PI) / 8),\r\n                visible: { $calc: 'level4Visible' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['level5Visible'],\r\n            payload: {\r\n                texture: 'controller-level',\r\n                width: 100,\r\n                height: 100,\r\n                anchor: {\r\n                    y: 1,\r\n                },\r\n                rotation: 4 * ((2 * Math.PI) / 8),\r\n                visible: { $calc: 'level5Visible' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['level6Visible'],\r\n            payload: {\r\n                texture: 'controller-level',\r\n                width: 100,\r\n                height: 100,\r\n                anchor: {\r\n                    y: 1,\r\n                },\r\n                rotation: 5 * ((2 * Math.PI) / 8),\r\n                visible: { $calc: 'level6Visible' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['level7Visible'],\r\n            payload: {\r\n                texture: 'controller-level',\r\n                width: 100,\r\n                height: 100,\r\n                anchor: {\r\n                    y: 1,\r\n                },\r\n                rotation: 6 * ((2 * Math.PI) / 8),\r\n                visible: { $calc: 'level7Visible' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['level8Visible'],\r\n            payload: {\r\n                texture: 'controller-level',\r\n                width: 100,\r\n                height: 100,\r\n                anchor: {\r\n                    y: 1,\r\n                },\r\n                rotation: 7 * ((2 * Math.PI) / 8),\r\n                visible: { $calc: 'level8Visible' },\r\n            },\r\n        },\r\n        {\r\n            type: 'userBadge',\r\n            props: ['user', 'level'],\r\n        },\r\n        {\r\n            id: 'siteProgress',\r\n            type: 'siteProgress',\r\n            props: ['progress', 'progressTotal', 'level'],\r\n            payload: {\r\n                color: 0xFFFFFF,\r\n                radius: 37,\r\n                lineWidth: 0,\r\n                progressTotal: { $calc: 'progressTotal' },\r\n            },\r\n            when: ({ state: { progress } }) => progress > 0,\r\n            actions: [blinking(0.8, 0.3, 1, 1)],\r\n        },\r\n        {\r\n            type: 'circle',\r\n            props: ['level'],\r\n            payload: {\r\n                radius: 40,\r\n                strokeColor: 0x080808,\r\n                strokeWidth: 10,\r\n            },\r\n        },\r\n        {\r\n            id: 'downgrade',\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'effects',\r\n            payload: {\r\n                alpha: 0,\r\n                width: 200,\r\n                height: 200,\r\n                tint: 0xff3333,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            payload: {\r\n                id: 'downgrade',\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [\r\n                                    { $calc: 'downgradeOpacity' },\r\n                                    { $processorParam: 'tickDuration', koef: 0.2 }],\r\n                            },\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [\r\n                                    0,\r\n                                    { $processorParam: 'tickDuration', koef: 0.8 }],\r\n                            },\r\n                        ],\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            props: ['user'],\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 1200,\r\n                height: 1200,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            props: ['user'],\r\n            shouldRun: ({ state: { user } }) => !!user,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 500,\r\n                height: 500,\r\n                alpha: 1,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 4,\r\n};\r\n","/**\r\n * Created by vedi on 07/04/2017.\r\n */\r\n\r\nexport const calculateAngle = (x0, y0, x, y) => {\r\n    let angle = Math.atan2(y - y0, x - x0) + (Math.PI / 2);\r\n    if (angle > Math.PI) {\r\n        angle -= 2 * Math.PI;\r\n    } else if (angle < -Math.PI) {\r\n        angle += 2 * Math.PI;\r\n    }\r\n    return angle;\r\n};\r\nexport const convertGameXYToWorld = ({ x, y }, { CELL_SIZE }) => ({\r\n    x: (CELL_SIZE * x),\r\n    y: (CELL_SIZE * y),\r\n});\r\nexport const scaleGameToWorld = (value, { CELL_SIZE }) => CELL_SIZE * value;\r\n\r\nexport default {\r\n    calculateAngle,\r\n    convertGameXYToWorld,\r\n    scaleGameToWorld,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport mathHelper from '../../../helpers/mathHelper';\r\n\r\nimport { displayName } from '../action-templates';\r\nimport { resourceTotal } from '../calculation-templates';\r\n\r\nconst CELL_SIZE = 100;\r\nconst ENERGY_RADIUS = 20;\r\nconst isNpc = ({ state: { user } }) => user === '3' || user === '2';\r\nconst isNotNpc = (...params) => !isNpc(...params);\r\n\r\nexport default {\r\n    texture: 'creep',\r\n    calculations: [\r\n        {\r\n            id: 'displayName',\r\n            func: ({ calcs: { isOwner }, state: { name, user }, stateExtra: { users } }) =>\r\n                (isOwner ? name : users[user].username),\r\n        },\r\n        {\r\n            id: 'rotation',\r\n            props: ['x', 'y'],\r\n            func: ({ prevState: { x: prevX, y: prevY } = {}, state: { x, y } }) => {\r\n                const { calculateAngle } = mathHelper;\r\n                return (prevX !== undefined && prevY !== undefined ?\r\n                    calculateAngle(prevX, prevY, x, y) : 0);\r\n            },\r\n        },\r\n        resourceTotal(),\r\n        {\r\n            id: 'resourcesTotalRadius',\r\n            func: ({ state: { energyCapacity }, calcs: { resourcesTotal } }) =>\r\n                Math.min(1, resourcesTotal / energyCapacity) * ENERGY_RADIUS,\r\n        },\r\n        {\r\n            id: 'energyRadius',\r\n            func: ({ state: { energy, energyCapacity } }) =>\r\n                Math.min(1, energy / energyCapacity) * ENERGY_RADIUS,\r\n        },\r\n        {\r\n            id: 'powerRadius',\r\n            func: ({ state: { energy, power = 0, energyCapacity } }) =>\r\n                Math.min(1, (energy + power) / energyCapacity) * ENERGY_RADIUS,\r\n        },\r\n        {\r\n            id: 'safeMode',\r\n            func: ({\r\n                stateExtra,\r\n                state: { user },\r\n                stateExtra: { controller, gameTime, objects },\r\n            }) => {\r\n                if (controller === undefined) {\r\n                    controller = objects.find(i => i.type === 'controller') || null;\r\n                    stateExtra.controller = controller;\r\n                }\r\n                return controller && controller.safeMode > gameTime && controller.user !== user ?\r\n                    0.5 : 1.0;\r\n            },\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'container',\r\n            once: 'true',\r\n            payload: {\r\n                id: 'mainContainer',\r\n            },\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                color: 0x202020,\r\n                radius: 50,\r\n            },\r\n            when: isNotNpc,\r\n        },\r\n        {\r\n            type: 'creepBuildBody',\r\n            props: ['body'],\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n            },\r\n            when: isNotNpc,\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                color: 0x000000,\r\n                radius: 32,\r\n            },\r\n            when: isNotNpc,\r\n        },\r\n        {\r\n            type: 'userBadge',\r\n            once: true,\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                radius: 26,\r\n                color: 0x222222,\r\n            },\r\n            when: isNotNpc,\r\n        },\r\n        {\r\n            type: 'circle',\r\n            props: ['energy', 'power', 'resourcesTotal'],\r\n            when: ({ state: { power = 0, energy }, calcs: { resourcesTotal } }) =>\r\n                resourcesTotal > 0 && energy + power < resourcesTotal,\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                radius: { $calc: 'resourcesTotalRadius' },\r\n                color: 0xffffff,\r\n            },\r\n        },\r\n        {\r\n            type: 'circle',\r\n            props: ['energy', 'power'],\r\n            when: ({ state: { power = 0 } }) => power > 0,\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                radius: { $calc: 'powerRadius' },\r\n                color: 0xf41f33,\r\n            },\r\n        },\r\n        {\r\n            type: 'circle',\r\n            props: ['energy'],\r\n            when: ({ state: { energy } }) => energy > 0,\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                radius: { $calc: 'energyRadius' },\r\n                color: 0xffe56d,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                texture: 'creep-npc',\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n            when: isNpc,\r\n        },\r\n        {\r\n            type: 'creepActions',\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n            },\r\n            props: '*',\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            when: ((params) => {\r\n                const { state: { spawning } } = params;\r\n                return !spawning && isNotNpc(params);\r\n            }),\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                texture: 'creep-mask',\r\n                width: 100,\r\n                height: 100,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            when: isNpc,\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                texture: 'glow',\r\n                width: 100,\r\n                height: 100,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            shouldRun: (({ state: { spawning } }) => !spawning),\r\n            payload: {\r\n                parentId: 'mainContainer',\r\n                texture: 'glow',\r\n                width: 400,\r\n                height: 400,\r\n                alpha: 0.2,\r\n            },\r\n        },\r\n        displayName('creeps', ({ state: { spawning } }) => !spawning),\r\n        {\r\n            type: 'say',\r\n            layer: 'effects',\r\n            when: ({\r\n                state: { actionLog: { say } = {} },\r\n                stateExtra: { gameData: { showCreepSpeech } },\r\n                calcs: { isOwner },\r\n            }) =>\r\n                !!showCreepSpeech && !!say && (say.isPublic || isOwner),\r\n            payload: {\r\n                say: { $state: 'actionLog.say' },\r\n            },\r\n        },\r\n        {\r\n            id: 'rangedMassAttack',\r\n            type: 'circle',\r\n            layer: 'effects',\r\n            once: true,\r\n            payload: {\r\n                alpha: 0,\r\n                color: 0x5d80b2,\r\n                radius: 300,\r\n                blendMode: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            payload: {\r\n                id: 'rangedMassAttack',\r\n            },\r\n            when: ({ state: { actionLog: { rangedMassAttack } = {} } }) => !!rangedMassAttack,\r\n            actions: [{\r\n                action: 'Sequence',\r\n                params: [[\r\n                    {\r\n                        action: 'Spawn',\r\n                        params: [[\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [0, 0, 0],\r\n                            },\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [0.4, 0],\r\n                            },\r\n                        ]],\r\n                    },\r\n                    {\r\n                        action: 'Spawn',\r\n                        params: [[\r\n                            {\r\n                                action: 'Ease',\r\n                                params: [{\r\n                                    action: 'ScaleTo',\r\n                                    params: [1, 1, { $processorParam: 'tickDuration', koef: 0.6 }],\r\n                                }],\r\n                            },\r\n                            {\r\n                                action: 'Ease',\r\n                                params: [{\r\n                                    action: 'AlphaTo',\r\n                                    params: [0, { $processorParam: 'tickDuration', koef: 0.6 }],\r\n                                }],\r\n                            },\r\n                        ]],\r\n                    },\r\n                ]],\r\n            }],\r\n        },\r\n    ],\r\n    actions: [\r\n        {\r\n            id: 'moveTo',\r\n            props: ['x', 'y'],\r\n            actions: [{\r\n                action: 'Ease',\r\n                params: [\r\n                    {\r\n                        action: 'MoveTo',\r\n                        params: [\r\n                            { $state: 'x', koef: CELL_SIZE },\r\n                            { $state: 'y', koef: CELL_SIZE },\r\n                            { $processorParam: 'tickDuration' },\r\n                        ],\r\n                    },\r\n                    'EASE_IN_OUT_QUAD',\r\n                ],\r\n            }],\r\n        },\r\n        {\r\n            id: 'rotateTo',\r\n            props: ['rotation'],\r\n            targetId: 'mainContainer',\r\n            actions: [{\r\n                action: 'RotateTo',\r\n                params: [\r\n                    { $calc: 'rotation' },\r\n                    { $processorParam: 'tickDuration', koef: 0.2 },\r\n                ],\r\n            }],\r\n        },\r\n        {\r\n            id: 'safeModeAlpha',\r\n            props: ['safeMode'],\r\n            targetId: 'mainContainer',\r\n            actions: [{\r\n                action: 'AlphaTo',\r\n                params: [{ $calc: 'safeMode' }, 0],\r\n            }],\r\n        },\r\n    ],\r\n    disappearProcessor: { type: 'disappear' },\r\n    zIndex: 6,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nconst METADATA = {\r\n    small: 68,\r\n    medium: 80,\r\n    large: 100,\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'size',\r\n            props: ['energyCapacity'],\r\n            func: ({ state: { energyCapacity } }) => {\r\n                if (energyCapacity >= 200) {\r\n                    return METADATA.large;\r\n                } else if (energyCapacity >= 100) {\r\n                    return METADATA.medium;\r\n                } else {\r\n                    return METADATA.small;\r\n                }\r\n            },\r\n        },\r\n        {\r\n            id: 'resourceScale',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ state: { energy, energyCapacity } }) =>\r\n                Math.min(1, energy / energyCapacity),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            when: ({ state: { energyCapacity } }) => energyCapacity < 100,\r\n            payload: {\r\n                texture: 'extension-border50',\r\n                tint: { $calc: 'playerColor' },\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            when: ({ state: { energyCapacity } }) => energyCapacity === 100,\r\n            payload: {\r\n                texture: 'extension-border100',\r\n                tint: { $calc: 'playerColor' },\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            when: ({ state: { energyCapacity } }) => energyCapacity === 200,\r\n            payload: {\r\n                texture: 'extension-border200',\r\n                tint: { $calc: 'playerColor' },\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n\r\n        {\r\n            type: 'sprite',\r\n            props: ['energyCapacity'],\r\n            payload: {\r\n                texture: 'extension',\r\n                width: { $calc: 'size' },\r\n                height: { $calc: 'size' },\r\n            },\r\n        },\r\n        {\r\n            id: 'resourceCircle',\r\n            props: ['energyCapacity'],\r\n            type: 'circle',\r\n            payload: {\r\n                radius: { $calc: 'size', koef: 0.32 },\r\n                color: 0xffe56d,\r\n                scale: {\r\n                    x: { $calc: 'resourceScale' },\r\n                    y: { $calc: 'resourceScale' },\r\n                },\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            props: ['resourceScale'],\r\n            payload: {\r\n                id: 'resourceCircle',\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'ScaleTo',\r\n                    params: [\r\n                        { $calc: 'resourceScale' },\r\n                        { $calc: 'resourceScale' },\r\n                        { $processorParam: 'tickDuration' },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            shouldRun: (({ state: { energy } }) => energy > 0),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 100,\r\n                height: 100,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            shouldRun: (({ state: { energy, energyCapacity } }) => energy > 0 &&\r\n                energyCapacity === 50),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 200,\r\n                height: 200,\r\n                alpha: 0.7,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            shouldRun: (({ state: { energy, energyCapacity } }) => energy > 0 &&\r\n                energyCapacity === 100),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 220,\r\n                height: 220,\r\n                alpha: 0.7,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            shouldRun: (({ state: { energy, energyCapacity } }) => energy > 0 &&\r\n                energyCapacity === 200),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 250,\r\n                height: 250,\r\n                alpha: 0.7,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 7,\r\n};\r\n","/**\r\n * Created by vedi on 04/09/2017.\r\n */\r\nexport default {\r\n    processors: [\r\n        {\r\n            id: 'main',\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                texture: 'extractor',\r\n                width: 200,\r\n                tint: { $calc: 'playerColor' },\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            once: true,\r\n            when: ({ state: { cooldown } }) => cooldown > 0,\r\n            until: ({ state: { cooldown } }) => !cooldown || cooldown <= 0,\r\n            payload: {\r\n                id: 'main',\r\n            },\r\n            actions: [{\r\n                action: 'Repeat',\r\n                params: [{\r\n                    action: 'RotateBy',\r\n                    params: [2 * Math.PI, 4],\r\n                }],\r\n            }],\r\n        },\r\n    ],\r\n    zIndex: 0,\r\n};\r\n","const CELL_SIZE = 100;\r\nconst FLAG_COLORS = {\r\n    1: 0xF44336,\r\n    2: 0x9C27B0,\r\n    3: 0x2196F3,\r\n    4: 0x00BCD4,\r\n    5: 0x4CAF50,\r\n    6: 0xFFEB3B,\r\n    7: 0xFF9800,\r\n    8: 0x795548,\r\n    9: 0x9E9E9E,\r\n    10: 0xFFFFFF,\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'flagColor',\r\n            func: ({ state: { color } }) => FLAG_COLORS[color],\r\n        },\r\n        {\r\n            id: 'flagSecondaryColor',\r\n            func: ({ state: { secondaryColor } }) => FLAG_COLORS[secondaryColor],\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            props: ['color'],\r\n            layer: 'effects',\r\n            payload: {\r\n                texture: 'flag',\r\n                width: 200,\r\n                height: 200,\r\n                tint: { $calc: 'flagColor' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['secondaryColor'],\r\n            layer: 'effects',\r\n            payload: {\r\n                texture: 'flag-secondary',\r\n                width: 200,\r\n                height: 200,\r\n                tint: { $calc: 'flagSecondaryColor' },\r\n            },\r\n            when: ({ state: { secondaryColor } }) => !!secondaryColor,\r\n        },\r\n        {\r\n            type: 'text',\r\n            props: ['color'],\r\n            layer: 'effects',\r\n            shouldRun: ({ stateExtra: { gameData: { showFlagsNames } } }) => !!showFlagsNames,\r\n            payload: {\r\n                text: { $state: 'name' },\r\n                style: {\r\n                    align: 'center',\r\n                    fill: { $calc: 'flagColor' },\r\n                    fontFamily: 'Roboto, sans-serif',\r\n                    fontSize: 60,\r\n                    stroke: '#111',\r\n                    strokeThickness: 10,\r\n                },\r\n                anchor: {\r\n                    x: 0.5,\r\n                    y: -0.5,\r\n                },\r\n            },\r\n        },\r\n    ],\r\n    actions: [\r\n        {\r\n            id: 'moveTo',\r\n            props: ['x', 'y'],\r\n            actions: [{\r\n                action: 'MoveTo',\r\n                params: [\r\n                    { $state: 'x', koef: CELL_SIZE },\r\n                    { $state: 'y', koef: CELL_SIZE },\r\n                    0,\r\n                ],\r\n            }],\r\n        },\r\n    ],\r\n};\r\n","/**\r\n * Created by vedi on 31/08/2017.\r\n */\r\n\r\nconst mineralPath = {\r\n    texture: 'lab-mineral',\r\n    tint: 0x777777,\r\n    anchor: {\r\n        y: 1,\r\n    },\r\n    scale: {\r\n        x: 0.6875,\r\n        y: 0.6875,\r\n    },\r\n    y: 25,\r\n};\r\n\r\nconst mineralColorActive = 0xffffff;\r\n\r\nconst energyRectangle = {\r\n    color: 0xffe56d,\r\n    x: -40,\r\n    y: 32,\r\n    width: 67,\r\n    height: 10,\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'mineralPathScale',\r\n            props: ['mineralAmount', 'mineralCapacity'],\r\n            func: ({ state: { mineralAmount, mineralCapacity } }) => {\r\n                const { scale: { x: scale } } = mineralPath;\r\n                return (scale * mineralAmount) / mineralCapacity;\r\n            },\r\n        },\r\n        {\r\n            id: 'energyWidth',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ state: { energy, energyCapacity } }) =>\r\n                (energyRectangle.width * energy) / energyCapacity,\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                texture: 'lab',\r\n                width: 200,\r\n                tint: { $calc: 'playerColor' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            id: 'lab-highlight',\r\n            payload: {\r\n                texture: 'lab-highlight',\r\n                width: 200,\r\n                alpha: 0,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            when: ({ state: { cooldown } }) => cooldown > 0,\r\n            payload: {\r\n                id: 'lab-highlight',\r\n            },\r\n            actions: [{\r\n                action: 'Sequence',\r\n                params: [[\r\n                    {\r\n                        action: 'AlphaTo',\r\n                        params: [0.5, { $processorParam: 'tickDuration', koef: 0.2 }],\r\n                    },\r\n                    {\r\n                        action: 'AlphaTo',\r\n                        params: [0, { $processorParam: 'tickDuration', koef: 0.8 }],\r\n                    },\r\n                ]],\r\n            }],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: mineralPath,\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['mineralPathScale'],\r\n            payload: Object.assign(\r\n                { },\r\n                mineralPath,\r\n                {\r\n                    scale: { x: { $calc: 'mineralPathScale' }, y: { $calc: 'mineralPathScale' } },\r\n                    tint: mineralColorActive,\r\n                }\r\n            ),\r\n        },\r\n        {\r\n            type: 'draw',\r\n            props: ['energyWidth'],\r\n            payload: {\r\n                id: 'energyRectangle',\r\n                drawings: [\r\n                    { method: 'beginFill', params: [energyRectangle.color] },\r\n                    {\r\n                        method: 'drawRect',\r\n                        params: [\r\n                            { $calc: 'energyWidth', koef: -0.5 },\r\n                            energyRectangle.y,\r\n                            { $calc: 'energyWidth' },\r\n                            energyRectangle.height,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'creepActions',\r\n            props: '*',\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            shouldRun: (({ state: { mineralAmount } }) => mineralAmount > 0),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 150,\r\n                height: 150,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            id: 'light',\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            props: ['mineralAmount'],\r\n            shouldRun: (({ state: { mineralAmount } }) => mineralAmount > 0),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 500,\r\n                height: 500,\r\n                alpha: 0.3,\r\n            },\r\n        },\r\n        {\r\n            id: 'reactionLight',\r\n            type: 'sprite',\r\n            layer: 'effects',\r\n            once: true,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 150,\r\n                height: 150,\r\n                alpha: 0,\r\n                blendMode: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            shouldRun: (({ state }) => state.actionLog && state.actionLog.runReaction),\r\n            payload: {\r\n                id: 'reactionLight',\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'DelayTime',\r\n                                params: [{ $processorParam: 'tickDuration', koef: 0.3 }],\r\n                            },\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [1.0, { $processorParam: 'tickDuration', koef: 0.15 }],\r\n                            },\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [0.0, { $processorParam: 'tickDuration', koef: 0.55 }],\r\n                            },\r\n                        ],\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n    zIndex: 15,\r\n};\r\n","/**\r\n * Created by vedi on 29/08/2017.\r\n */\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'energyScale',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ state: { energy, energyCapacity } }) =>\r\n                Math.min(1, energy / energyCapacity),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                texture: 'link-border',\r\n                width: 100,\r\n                height: 100,\r\n                tint: { $calc: 'playerColor' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                texture: 'link',\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n        {\r\n            type: 'container',\r\n            once: 'true',\r\n            payload: {\r\n                id: 'energyContainer',\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                id: 'energy',\r\n                parentId: 'energyContainer',\r\n                texture: 'link-energy',\r\n                width: 50,\r\n                height: 50,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            props: ['energyScale'],\r\n            payload: {\r\n                id: 'energyContainer',\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'ScaleTo',\r\n                    params: [\r\n                        { $calc: 'energyScale' },\r\n                        { $calc: 'energyScale' },\r\n                        { $processorParam: 'tickDuration' },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'creepActions',\r\n            props: '*',\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            shouldRun: (({ state: { energy } }) => energy > 0),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 100,\r\n                height: 100,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            id: 'light',\r\n            once: true,\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            shouldRun: (({ state: { energy } }) => energy > 0),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 400,\r\n                height: 400,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n\r\n    ],\r\n    zIndex: 9,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport { flickering } from '../action-templates';\r\n\r\nconst COLORS = {\r\n    L: {\r\n        foreground: 0x89F4A5,\r\n        background: 0x3F6147,\r\n    },\r\n    U: {\r\n        foreground: 0x88D6F7,\r\n        background: 0x1B617F,\r\n    },\r\n    K: {\r\n        foreground: 0x9370FF,\r\n        background: 0x331A80,\r\n    },\r\n    Z: {\r\n        foreground: 0xF2D28B,\r\n        background: 0x594D33,\r\n    },\r\n    X: {\r\n        foreground: 0xFF7A7A,\r\n        background: 0x4F2626,\r\n    },\r\n    O: {\r\n        foreground: 0xCCCCCC,\r\n        background: 0x4D4D4D,\r\n    },\r\n    H: {\r\n        foreground: 0xCCCCCC,\r\n        background: 0x4D4D4D,\r\n    },\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'foregroundColor',\r\n            once: true,\r\n            func: ({ state: { mineralType } }) => COLORS[mineralType].foreground,\r\n        },\r\n        {\r\n            id: 'backgroundColor',\r\n            once: true,\r\n            func: ({ state: { mineralType } }) => COLORS[mineralType].background,\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            payload: {\r\n                drawings: [\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [\r\n                            10,\r\n                            { $calc: 'foregroundColor' },\r\n                            1,\r\n                        ],\r\n                    },\r\n                    { method: 'beginFill', params: [{ $calc: 'backgroundColor' }] },\r\n                    {\r\n                        method: 'drawCircle',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            54,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'text',\r\n            once: true,\r\n            payload: {\r\n                text: { $state: 'mineralType' },\r\n                style: {\r\n                    align: 'center',\r\n                    fill: { $calc: 'foregroundColor' },\r\n                    fontFamily: 'Roboto, serif',\r\n                    fontSize: 82,\r\n                    fontWeight: 'bold',\r\n                },\r\n                anchor: {\r\n                    x: 0.5,\r\n                    y: 0.5,\r\n                },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 200,\r\n                height: 200,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 700,\r\n                height: 700,\r\n                alpha: 0.7,\r\n                tint: { $calc: 'foregroundColor' },\r\n            },\r\n            actions: [flickering(0.7, 0.4, 1.0, 0.4)],\r\n        },\r\n    ],\r\n    zIndex: 2,\r\n};\r\n","const scaleAction = {\r\n    action: 'Repeat',\r\n    params: [\r\n        {\r\n            action: 'Sequence',\r\n            params: [[\r\n                {\r\n                    action: 'Ease',\r\n                    params: [\r\n                        {\r\n                            action: 'ScaleTo',\r\n                            params: [0.6, 0.6, 1],\r\n                        },\r\n                        'EASE_IN_OUT_QUAD',\r\n                    ],\r\n                },\r\n                {\r\n                    action: 'Ease',\r\n                    params: [\r\n                        {\r\n                            action: 'ScaleTo',\r\n                            params: [1, 1, 1],\r\n                        },\r\n                        'EASE_IN_OUT_QUAD',\r\n                    ],\r\n                },\r\n            ]],\r\n        },\r\n    ],\r\n};\r\n\r\nconst landed = ({ state: { landTime }, stateExtra: { gameTime } }) => landTime <= gameTime;\r\nconst notLanded = (...params) => !landed(...params);\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'landTimeSpeed',\r\n            func: ({ state: { landTime }, stateExtra: { gameTime } }) => {\r\n                if (landTime <= gameTime) {\r\n                    return Number.MAX_VALUE;\r\n                }\r\n                return Math.max(0.4, ((Math.round((landTime - gameTime) / 100) * 100) / 50000) * 8);\r\n            },\r\n        },\r\n        {\r\n            id: 'offsetToZeroX',\r\n            func: ({ state: { x }, world: { options: { CELL_SIZE } } }) => -(x + 0.5) * CELL_SIZE,\r\n        },\r\n        {\r\n            id: 'offsetToZeroY',\r\n            func: ({ state: { y }, world: { options: { CELL_SIZE } } }) => -(y + 0.5) * CELL_SIZE,\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            layer: 'effects',\r\n            once: true,\r\n            payload: {\r\n                texture: 'nuke',\r\n                alpha: 0.7,\r\n            },\r\n            when: notLanded,\r\n            actions: [scaleAction],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'effects',\r\n            once: true,\r\n            payload: {\r\n                texture: 'nuke',\r\n                blur: 2,\r\n                blendMode: 3,\r\n            },\r\n            when: notLanded,\r\n            actions: [scaleAction],\r\n        },\r\n        {\r\n            type: 'circle',\r\n            layer: 'effects',\r\n            once: true,\r\n            payload: {\r\n                color: 0xFF2222,\r\n                radius: 110,\r\n                blendMode: 1,\r\n                alpha: 0.5,\r\n            },\r\n            when: notLanded,\r\n            actions: [scaleAction],\r\n        },\r\n        {\r\n            type: 'circle',\r\n            layer: 'effects',\r\n            props: ['landTimeSpeed'],\r\n            payload: {\r\n                color: 0xFF0000,\r\n                radius: 600,\r\n                alpha: 0,\r\n                blendMode: 1,\r\n                blur: 30,\r\n            },\r\n            when: notLanded,\r\n            actions: [\r\n                {\r\n                    action: 'Repeat',\r\n                    params: [\r\n                        {\r\n                            action: 'Sequence',\r\n                            params: [[\r\n                                {\r\n                                    action: 'Spawn',\r\n                                    params: [[\r\n                                        {\r\n                                            action: 'ScaleTo',\r\n                                            params: [0, 0, { $calc: 'landTimeSpeed' }],\r\n                                        },\r\n                                        {\r\n                                            action: 'AlphaTo',\r\n                                            params: [0.4, { $calc: 'landTimeSpeed' }],\r\n                                        },\r\n                                        {\r\n                                            action: 'FilterTo',\r\n                                            params: [0, 'blur', 0.5,\r\n                                                { $calc: 'landTimeSpeed', koef: 0.5 }],\r\n                                        },\r\n                                    ]],\r\n                                },\r\n                                {\r\n                                    action: 'Spawn',\r\n                                    params: [[\r\n                                        {\r\n                                            action: 'ScaleTo',\r\n                                            params: [1, 1, 0],\r\n                                        },\r\n                                        {\r\n                                            action: 'AlphaTo',\r\n                                            params: [0, 0],\r\n                                        },\r\n                                        {\r\n                                            action: 'FilterTo',\r\n                                            params: [0, 'blur', 30, 0],\r\n                                        },\r\n                                    ]],\r\n                                },\r\n                            ]],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            when: notLanded,\r\n            payload: {\r\n                texture: 'glow',\r\n                tint: 0xFF4444,\r\n                width: 700,\r\n                height: 700,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'effects',\r\n            once: true,\r\n            payload: {\r\n                texture: 'glow',\r\n                alpha: 1.0,\r\n                tint: 0xff2222,\r\n                width: 1,\r\n                height: 1,\r\n                blendMode: 1,\r\n            },\r\n            when: landed,\r\n            actions: [\r\n                {\r\n                    action: 'Spawn',\r\n                    params: [[\r\n                        {\r\n                            action: 'Ease',\r\n                            params: [\r\n                                {\r\n                                    action: 'ScaleTo',\r\n                                    params: [20, 20, { $processorParam: 'tickDuration' }],\r\n                                },\r\n                            ],\r\n                        },\r\n                        {\r\n                            action: 'AlphaTo',\r\n                            params: [0, { $processorParam: 'tickDuration' }],\r\n                        },\r\n                    ]],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            layer: 'effects',\r\n            when: landed,\r\n            payload: {\r\n                x: { $calc: 'offsetToZeroX' },\r\n                y: { $calc: 'offsetToZeroY' },\r\n                blendMode: 1,\r\n                alpha: 0.7,\r\n                drawings: [\r\n                    { method: 'beginFill', params: [0xFF0000] },\r\n                    {\r\n                        method: 'drawRect',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            { $calc: 'viewBox' },\r\n                            { $calc: 'viewBox' },\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Ease',\r\n                    params: [\r\n                        {\r\n                            action: 'AlphaTo',\r\n                            params: [0, { $processorParam: 'tickDuration' }],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nconst resourceTriangle = {\r\n    color: 0xffe56d,\r\n    x: 0,\r\n    y: 10,\r\n    width: 86,\r\n    height: 118,\r\n};\r\n\r\nconst gRectangle = {\r\n    color: 0xffffff,\r\n    x: -40,\r\n    y: 35,\r\n    width: 80,\r\n    height: 15,\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'energyTrianglePoints',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ state: { energy, energyCapacity } }) => {\r\n                const { x, y } = resourceTriangle;\r\n                let { width, height } = resourceTriangle;\r\n                const koef = energy / energyCapacity;\r\n                width *= koef;\r\n                height *= koef;\r\n                return [\r\n                    x - (width / 2), y,\r\n                    x, y - height,\r\n                    x + (width / 2), y,\r\n                ];\r\n            },\r\n        },\r\n        {\r\n            id: 'gWidth',\r\n            func: ({ state: { G: g, GCapacity: gCapacity } }) =>\r\n                (gRectangle.width * g) / gCapacity,\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                texture: 'nuker-border',\r\n                width: 300,\r\n                height: 300,\r\n                y: -40,\r\n                tint: { $calc: 'playerColor' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                texture: 'nuker',\r\n                width: 300,\r\n                height: 300,\r\n                y: -40,\r\n            },\r\n        },\r\n        {\r\n            type: 'draw',\r\n            props: ['energyTrianglePoints'],\r\n            payload: {\r\n                id: 'energyTriangle',\r\n                drawings: [\r\n                    { method: 'beginFill', params: [resourceTriangle.color] },\r\n                    {\r\n                        method: 'drawPolygon',\r\n                        params: [{ $calc: 'energyTrianglePoints' }],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'draw',\r\n            props: ['gWidth'],\r\n            payload: {\r\n                id: 'gRectangle',\r\n                drawings: [\r\n                    { method: 'beginFill', params: [gRectangle.color] },\r\n                    {\r\n                        method: 'drawRect',\r\n                        params: [\r\n                            { $calc: 'gWidth', koef: -0.5 },\r\n                            gRectangle.y,\r\n                            { $calc: 'gWidth' },\r\n                            gRectangle.height,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 800,\r\n                height: 800,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 7\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nconst ellipseBorder = {\r\n    color: 0x111111,\r\n    strokeWidth: 5,\r\n    width: 45,\r\n    height: 40,\r\n};\r\n\r\nconst ellipseEye = {\r\n    strokeWidth: 5,\r\n    width: 20,\r\n    height: 20,\r\n};\r\n\r\nexport default {\r\n    processors: [\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            payload: {\r\n                id: 'border',\r\n                drawings: [\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [\r\n                            ellipseBorder.strokeWidth,\r\n                            { $calc: 'playerColor' },\r\n                            1,\r\n                        ],\r\n                    },\r\n                    { method: 'beginFill', params: [ellipseBorder.color] },\r\n                    {\r\n                        method: 'drawEllipse',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            ellipseBorder.width,\r\n                            ellipseBorder.height,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            payload: {\r\n                id: 'eye',\r\n                drawings: [\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [0, 0, 1],\r\n                    },\r\n                    { method: 'beginFill', params: [{ $calc: 'playerColor' }] },\r\n                    {\r\n                        method: 'drawEllipse',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            ellipseEye.width,\r\n                            ellipseEye.height,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Repeat',\r\n                    params: [\r\n                        {\r\n                            action: 'Sequence',\r\n                            params: [[\r\n                                {\r\n                                    action: 'MoveTo',\r\n                                    params: [20, 0, 0.25],\r\n                                },\r\n                                {\r\n                                    action: 'DelayTime',\r\n                                    params: [0.25],\r\n                                },\r\n                                {\r\n                                    action: 'MoveTo',\r\n                                    params: [0, 15, 0.25],\r\n                                },\r\n                                {\r\n                                    action: 'DelayTime',\r\n                                    params: [0.25],\r\n                                },\r\n                                {\r\n                                    action: 'MoveTo',\r\n                                    params: [-20, 0, 0.25],\r\n                                },\r\n                                {\r\n                                    action: 'DelayTime',\r\n                                    params: [0.25],\r\n                                },\r\n                                {\r\n                                    action: 'MoveTo',\r\n                                    params: [0, -15, 0.25],\r\n                                },\r\n                                {\r\n                                    action: 'DelayTime',\r\n                                    params: [0.25],\r\n                                },\r\n                            ]],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 800,\r\n                height: 800,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 10,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport constants from '@screeps/common/lib/constants';\r\n\r\nconst ellipse = {\r\n    color: 0xf41f33,\r\n    strokeColor: 0x8d000d,\r\n    strokeWidth: 10,\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'radius',\r\n            props: ['power'],\r\n            func: ({ state: { power } }) => {\r\n                const { POWER_BANK_CAPACITY_MAX } = constants;\r\n                return Math.sqrt(((power / POWER_BANK_CAPACITY_MAX) * 3000) / Math.PI);\r\n            },\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                texture: 'powerBank',\r\n                width: 200,\r\n                height: 200,\r\n            },\r\n        },\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            payload: {\r\n                id: 'static',\r\n                drawings: [\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [\r\n                            ellipse.strokeWidth,\r\n                            ellipse.strokeColor,\r\n                            1,\r\n                        ],\r\n                    },\r\n                    { method: 'beginFill', params: [ellipse.color] },\r\n                    {\r\n                        method: 'drawCircle',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            { $calc: 'radius' },\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Repeat',\r\n                    params: [\r\n                        {\r\n                            action: 'Spawn',\r\n                            params: [[\r\n                                {\r\n                                    action: 'Sequence',\r\n                                    params: [[\r\n                                        {\r\n                                            action: 'ScaleTo',\r\n                                            params: [\r\n                                                { $rel: 'scale.x', koef: 0.6 },\r\n                                                { $rel: 'scale.y', koef: 0.6 },\r\n                                                { $processorParam: 'tickDuration', koef: 0.66 },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            action: 'ScaleTo',\r\n                                            params: [\r\n                                                { $rel: 'scale.x' },\r\n                                                { $rel: 'scale.y' },\r\n                                                { $processorParam: 'tickDuration', koef: 0.34 },\r\n                                            ],\r\n                                        },\r\n                                    ]],\r\n                                },\r\n                                {\r\n                                    action: 'Sequence',\r\n                                    params: [[\r\n                                        {\r\n                                            action: 'TintTo',\r\n                                            params: [\r\n                                                0xd31022,\r\n                                                { $processorParam: 'tickDuration', koef: 0.33 },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            action: 'TintTo',\r\n                                            params: [\r\n                                                0x8d000d,\r\n                                                { $processorParam: 'tickDuration', koef: 0.33 },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            action: 'TintTo',\r\n                                            params: [\r\n                                                0xf41f33,\r\n                                                { $processorParam: 'tickDuration', koef: 0.34 },\r\n                                            ],\r\n                                        },\r\n                                    ]],\r\n                                },\r\n                            ]],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 800,\r\n                height: 800,\r\n                tint: 0xFF8080,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 11,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\nconst ellipse1 = {\r\n    color: 0x222222,\r\n    radius: 75,\r\n    strokeColor: 0xcccccc,\r\n    strokeWidth: 7,\r\n};\r\nconst ellipse2 = {\r\n    color: 0x222222,\r\n    radius: 68,\r\n    strokeColor: 0xf41f33,\r\n    strokeWidth: 10,\r\n};\r\n\r\nconst ellipse3 = {\r\n    color: 0x181818,\r\n    radius: 59,\r\n};\r\n\r\nconst ellipse4 = {\r\n    color: 0x555555,\r\n    radius: 38,\r\n};\r\n\r\nconst arc = {\r\n    color: 0xf41f33,\r\n    radius: 50,\r\n    startAngle: -Math.PI / 2,\r\n    strokeWidth: 10,\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'powerAngle',\r\n            props: ['power', 'powerCapacity'],\r\n            func: ({ state: { power, powerCapacity } }) =>\r\n                arc.startAngle +\r\n                (powerCapacity ? (((2 * Math.PI) * power) / powerCapacity) : 0),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            payload: {\r\n                id: 'static',\r\n                drawings: [\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [\r\n                            ellipse1.strokeWidth,\r\n                            ellipse1.strokeColor,\r\n                            1,\r\n                        ],\r\n                    },\r\n                    { method: 'beginFill', params: [ellipse1.color] },\r\n                    {\r\n                        method: 'drawCircle',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            ellipse1.radius,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [\r\n                            ellipse2.strokeWidth,\r\n                            ellipse2.strokeColor,\r\n                            1,\r\n                        ],\r\n                    },\r\n                    { method: 'beginFill', params: [ellipse2.color] },\r\n                    {\r\n                        method: 'drawCircle',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            ellipse2.radius,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [0, 0, 1],\r\n                    },\r\n                    { method: 'beginFill', params: [ellipse3.color] },\r\n                    {\r\n                        method: 'drawCircle',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            ellipse3.radius,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'userBadge',\r\n            once: true,\r\n            payload: {\r\n                parentId: 'static',\r\n                color: ellipse4.color,\r\n                radius: ellipse4.radius,\r\n            },\r\n        },\r\n        {\r\n            type: 'draw',\r\n            props: ['powerAngle'],\r\n            payload: {\r\n                id: 'arc',\r\n                parentId: 'static',\r\n                drawings: [\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [\r\n                            arc.strokeWidth,\r\n                            arc.color,\r\n                            1,\r\n                        ],\r\n                    },\r\n                    {\r\n                        method: 'arc',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            arc.radius,\r\n                            arc.startAngle,\r\n                            { $calc: 'powerAngle' },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'resourceCircle',\r\n            props: ['energy', 'energyCapacity'],\r\n            payload: {\r\n                parentId: 'static',\r\n                radius: ellipse4.radius,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 150,\r\n                height: 150,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            id: 'glow',\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                alpha: 0.5,\r\n                scale: {\r\n                    x: 1,\r\n                    y: 1,\r\n                },\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            props: ['power'],\r\n            payload: {\r\n                id: 'glow',\r\n            },\r\n            actions: [{\r\n                action: 'Sequence',\r\n                params: [[\r\n                    {\r\n                        action: 'Spawn',\r\n                        params: [[\r\n                            {\r\n                                action: 'TintTo',\r\n                                params: [0xFF3333, { $processorParam: 'tickDuration', koef: 0.2 }],\r\n                            },\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [1, { $processorParam: 'tickDuration', koef: 0.2 }],\r\n                            },\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [2, 2, { $processorParam: 'tickDuration', koef: 0.2 }],\r\n                            },\r\n                        ]],\r\n                    },\r\n                    {\r\n                        action: 'Spawn',\r\n                        params: [[\r\n                            {\r\n                                action: 'TintTo',\r\n                                params: [0xFFFFFF, { $processorParam: 'tickDuration', koef: 0.8 }],\r\n                            },\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [0.5, { $processorParam: 'tickDuration', koef: 0.8 }],\r\n                            },\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [1, 1, { $processorParam: 'tickDuration', koef: 0.8 }],\r\n                            },\r\n                        ]],\r\n                    },\r\n                ]],\r\n            }],\r\n        },\r\n    ],\r\n    zIndex: 12,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport { flickering } from '../action-templates';\r\n\r\nconst rect1 = {\r\n    animationDuration: 4.0,\r\n    fillColor: 0x111111,\r\n    radius: 15,\r\n    size: 40,\r\n    strokeBlinkingColor: 0x0e0c04,\r\n    strokeColor: 0x595026,\r\n    strokeWidth: 15,\r\n};\r\n\r\nconst rect2 = {\r\n    animationDuration: 2,\r\n    fillColor: 0xffe56d,\r\n    radius: 15,\r\n    size: 60,\r\n    blinkingColors: [0xffffff, 0xffcd6d, 0xffde84],\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'energySize',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ state: { energy, energyCapacity } }) =>\r\n                (rect2.size * energy) / energyCapacity,\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'draw',\r\n            once: true,\r\n            payload: {\r\n                id: 'static',\r\n                tint: rect1.strokeColor,\r\n                drawings: [\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [\r\n                            rect1.strokeWidth,\r\n                            0xffffff,\r\n                            1,\r\n                        ],\r\n                    },\r\n                    { method: 'beginFill', params: [rect1.fillColor] },\r\n                    {\r\n                        method: 'drawRoundedRect',\r\n                        params: [\r\n                            -rect1.size / 2,\r\n                            -rect1.size / 2,\r\n                            rect1.size,\r\n                            rect1.size,\r\n                            rect1.radius,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n            actions: [{\r\n                action: 'Repeat',\r\n                params: [{\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'TintTo',\r\n                                params: [\r\n                                    rect1.strokeBlinkingColor,\r\n                                    rect1.animationDuration / 2,\r\n                                ],\r\n                            },\r\n                            {\r\n                                action: 'TintTo',\r\n                                params: [\r\n                                    rect1.strokeColor,\r\n                                    rect1.animationDuration / 2,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    ],\r\n                }],\r\n            }],\r\n        },\r\n        {\r\n            type: 'draw',\r\n            props: ['energySize'],\r\n            payload: {\r\n                id: 'energy',\r\n                tint: rect2.fillColor,\r\n                drawings: [\r\n                    { method: 'beginFill', params: [0xffffff] },\r\n                    {\r\n                        method: 'drawRoundedRect',\r\n                        params: [\r\n                            { $calc: 'energySize', koef: -0.5 },\r\n                            { $calc: 'energySize', koef: -0.5 },\r\n                            { $calc: 'energySize' },\r\n                            { $calc: 'energySize' },\r\n                            rect1.radius,\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n            actions: [{\r\n                action: 'Repeat',\r\n                params: [{\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'TintTo',\r\n                                params: [\r\n                                    rect2.blinkingColors[0],\r\n                                    rect2.animationDuration / 4,\r\n                                ],\r\n                            },\r\n                            {\r\n                                action: 'TintTo',\r\n                                params: [\r\n                                    rect2.blinkingColors[1],\r\n                                    rect2.animationDuration / 4,\r\n                                ],\r\n                            },\r\n                            {\r\n                                action: 'TintTo',\r\n                                params: [\r\n                                    rect2.blinkingColors[2],\r\n                                    rect2.animationDuration / 4,\r\n                                ],\r\n                            },\r\n                            {\r\n                                action: 'TintTo',\r\n                                params: [\r\n                                    rect2.fillColor,\r\n                                    rect2.animationDuration / 4,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    ],\r\n                }],\r\n            }],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 800,\r\n                height: 800,\r\n                tint: 0xFFFF50,\r\n                alpha: 0.5,\r\n            },\r\n            actions: [flickering(0.6, 0.4, 0.8, 0.4)],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            shouldRun: (({ state: { energy } }) => energy > 0),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 150,\r\n                height: 150,\r\n                tint: 0xFFFFFF,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 2,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport { displayName } from '../action-templates';\r\n\r\nconst ellipse1 = {\r\n    color: 0xCCCCCC,\r\n    radius: 70,\r\n};\r\n\r\nconst ellipse2 = {\r\n    color: 0x181818,\r\n    radius: 59,\r\n};\r\n\r\nconst ellipse3 = {\r\n    color: 0x555555,\r\n    radius: 38,\r\n};\r\n\r\nconst arc = {\r\n    color: 0xCCCCCC,\r\n    radius: 50,\r\n    startAngle: -Math.PI / 2,\r\n    strokeWidth: 10,\r\n};\r\n\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'spawningAngle',\r\n            props: ['spawning'],\r\n            func: ({ state: { spawning } }) => {\r\n                const { remainingTime = 0.01, needTime = 0 } = spawning || {};\r\n                return arc.startAngle +\r\n                    (needTime ? (((2 * Math.PI) * (needTime - remainingTime)) / needTime) : 0);\r\n            },\r\n        },\r\n        {\r\n            id: 'resourceScale',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ state: { energy, energyCapacity } }) =>\r\n                energy / energyCapacity,\r\n        },\r\n        {\r\n            id: 'displayName',\r\n            func: ({ calcs: { isOwner }, state: { name, user }, stateExtra: { users } }) =>\r\n                (isOwner ? name : users[user].username),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                id: 'static',\r\n                radius: ellipse1.radius,\r\n                color: ellipse1.color,\r\n            },\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                id: 'black',\r\n                parentId: 'static',\r\n                radius: ellipse2.radius,\r\n                color: ellipse2.color,\r\n            },\r\n        },\r\n        {\r\n            type: 'userBadge',\r\n            once: true,\r\n            payload: {\r\n                parentId: 'black',\r\n                color: ellipse3.color,\r\n                radius: ellipse3.radius,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            props: ['spawning'],\r\n            once: true,\r\n            shouldRun: (({ state: { spawning } }) => !!spawning),\r\n            payload: {\r\n                id: 'static',\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Repeat',\r\n                    params: [\r\n                        {\r\n                            action: 'Sequence',\r\n                            params: [\r\n                                [\r\n                                    {\r\n                                        action: 'Ease',\r\n                                        params: [\r\n                                            {\r\n                                                action: 'ScaleTo',\r\n                                                params: [\r\n                                                    1.25,\r\n                                                    1.25,\r\n                                                    0.5,\r\n                                                ],\r\n                                            },\r\n                                        ],\r\n                                    },\r\n                                    {\r\n                                        action: 'Ease',\r\n                                        params: [\r\n                                            {\r\n                                                action: 'ScaleTo',\r\n                                                params: [\r\n                                                    1,\r\n                                                    1,\r\n                                                    2,\r\n                                                ],\r\n                                            },\r\n                                            'EASE_IN_QUAD',\r\n                                        ],\r\n                                    },\r\n                                ],\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'draw',\r\n            props: ['spawningAngle'],\r\n            payload: {\r\n                id: 'arc',\r\n                parentId: 'static',\r\n                drawings: [\r\n                    {\r\n                        method: 'lineStyle',\r\n                        params: [\r\n                            arc.strokeWidth,\r\n                            arc.color,\r\n                            1,\r\n                        ],\r\n                    },\r\n                    {\r\n                        method: 'arc',\r\n                        params: [\r\n                            0,\r\n                            0,\r\n                            arc.radius,\r\n                            arc.startAngle,\r\n                            { $calc: 'spawningAngle' },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            id: 'resourceCircle',\r\n            once: true,\r\n            type: 'circle',\r\n            payload: {\r\n                parentId: 'static',\r\n                radius: ellipse3.radius,\r\n                color: 0xffe56d,\r\n                scale: {\r\n                    x: { $calc: 'resourceScale' },\r\n                    y: { $calc: 'resourceScale' },\r\n                },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            props: ['energy'],\r\n            shouldRun: (({ state: { energy } }) => energy > 0),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 100,\r\n                height: 100,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            id: 'light',\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 600,\r\n                height: 600,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            props: ['spawning'],\r\n            shouldRun: (({ state: { spawning } }) => !!spawning),\r\n            once: true,\r\n            payload: {\r\n                id: 'light',\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Repeat',\r\n                    params: [\r\n                        {\r\n                            action: 'Sequence',\r\n                            params: [\r\n                                [\r\n                                    {\r\n                                        action: 'Ease',\r\n                                        params: [\r\n                                            {\r\n                                                action: 'AlphaTo',\r\n                                                params: [\r\n                                                    1,\r\n                                                    0.5,\r\n                                                ],\r\n                                            },\r\n                                        ],\r\n                                    },\r\n                                    {\r\n                                        action: 'Ease',\r\n                                        params: [\r\n                                            {\r\n                                                action: 'AlphaTo',\r\n                                                params: [\r\n                                                    0.5,\r\n                                                    2,\r\n                                                ],\r\n                                            },\r\n                                            'EASE_IN_QUAD',\r\n                                        ],\r\n                                    },\r\n                                ],\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        displayName('spawns'),\r\n    ],\r\n    actions: [\r\n        {\r\n            id: 'resourceScale',\r\n            targetId: 'resourceCircle',\r\n            props: ['resourceScale'],\r\n            actions: [\r\n                {\r\n                    action: 'ScaleTo',\r\n                    params: [\r\n                        { $calc: 'resourceScale' },\r\n                        { $calc: 'resourceScale' },\r\n                        { $processorParam: 'tickDuration' },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n    zIndex: 8,\r\n};\r\n","/**\r\n * Created by vedi on 19/04/2017.\r\n */\r\n\r\nimport constants from '@screeps/common/lib/constants';\r\n\r\nimport { resourceTotal } from '../calculation-templates';\r\n\r\nconst WEIGHT = 110;\r\nconst TOTAL_HEIGHT = 140;\r\n\r\nexport default {\r\n    texture: 'storage',\r\n    calculations: [\r\n        resourceTotal(),\r\n        {\r\n            id: 'energyBackgroundHeight',\r\n            func: ({ calcs: { resourcesTotal } }) => {\r\n                const { STORAGE_CAPACITY } = constants;\r\n                return (resourcesTotal * TOTAL_HEIGHT) / STORAGE_CAPACITY;\r\n            },\r\n        },\r\n        {\r\n            id: 'energyHeight',\r\n            func: ({ state: { energy } }) => {\r\n                const { STORAGE_CAPACITY } = constants;\r\n                return (energy * TOTAL_HEIGHT) / STORAGE_CAPACITY;\r\n            },\r\n        },\r\n        {\r\n            id: 'powerHeight',\r\n            func: ({ state: { energy, power = 0 } }) => {\r\n                const { STORAGE_CAPACITY } = constants;\r\n                return ((power + energy) * TOTAL_HEIGHT) / STORAGE_CAPACITY;\r\n            },\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            id: 'border',\r\n            type: 'sprite',\r\n            once: true,\r\n            payload: {\r\n                texture: 'storage-border',\r\n                width: 200,\r\n                height: 200,\r\n                tint: { $calc: 'playerColor' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            payload: {\r\n                texture: 'storage',\r\n                width: 200,\r\n                height: 200,\r\n            },\r\n        },\r\n        {\r\n            id: 'otherResourcesBar',\r\n            type: 'sprite',\r\n            props: ['energy', 'power', 'energyBackgroundHeight', 'resourcesTotal'],\r\n            shouldRun: ({ state: { power, energy }, calcs: { resourcesTotal } }) =>\r\n                energy + (power || 0) < resourcesTotal,\r\n            payload: {\r\n                texture: 'rectangle',\r\n                pivot: {\r\n                    y: { $calc: 'energyBackgroundHeight' },\r\n                },\r\n                y: TOTAL_HEIGHT / 2,\r\n                width: WEIGHT,\r\n                height: { $calc: 'energyBackgroundHeight' },\r\n                tint: 0xffffff,\r\n            },\r\n        },\r\n        {\r\n            id: 'powerBar',\r\n            type: 'sprite',\r\n            props: ['energy', 'power', 'resourcesTotal'],\r\n            shouldRun: ({ state: { power } }) => power > 0,\r\n            payload: {\r\n                texture: 'rectangle',\r\n                pivot: {\r\n                    y: { $calc: 'powerHeight' },\r\n                },\r\n                y: TOTAL_HEIGHT / 2,\r\n                width: WEIGHT,\r\n                height: { $calc: 'powerHeight' },\r\n                tint: 0xf41f33,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            id: 'energyBar',\r\n            props: ['energy', 'power', 'resourcesTotal'],\r\n            shouldRun: ({ state: { energy } }) => energy > 0,\r\n            payload: {\r\n                texture: 'rectangle',\r\n                pivot: {\r\n                    y: { $calc: 'energyHeight' },\r\n                },\r\n                y: TOTAL_HEIGHT / 2,\r\n                width: WEIGHT,\r\n                height: { $calc: 'energyHeight' },\r\n                tint: 0xffe56d,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            shouldRun: ({ calcs: { resourcesTotal } }) => resourcesTotal > 0,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 200,\r\n                height: 200,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 800,\r\n                height: 800,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 7,\r\n};\r\n","/**\r\n * Created by vedi on 22/08/2017.\r\n */\r\n\r\nimport { resourceTotal } from '../calculation-templates';\r\n\r\nconst ENERGY_RECT_FULL_SIZE = 76.0;\r\n\r\nconst isCooldown = ({ state: { cooldownTime }, stateExtra: { gameTime } }) =>\r\n    cooldownTime && cooldownTime >= gameTime;\r\nconst isNotCooldown = (...params) => !isCooldown(...params);\r\n\r\nexport default {\r\n    calculations: [\r\n        resourceTotal(),\r\n        {\r\n            id: 'restResourceSize',\r\n            props: ['energy', 'energyCapacity', 'power', 'resourcesTotal'],\r\n            func: ({\r\n                state: { energy = 0, energyCapacity, power = 0 },\r\n                calcs: { resourcesTotal },\r\n            }) => {\r\n                if (resourcesTotal <= energy + power) {\r\n                    return 0;\r\n                }\r\n                const result = (ENERGY_RECT_FULL_SIZE * resourcesTotal) / energyCapacity;\r\n                return Math.min(result, ENERGY_RECT_FULL_SIZE);\r\n            },\r\n        },\r\n        {\r\n            id: 'powerResourceSize',\r\n            props: ['energy', 'energyCapacity', 'power'],\r\n            func: ({ state: { energy = 0, energyCapacity, power = 0 } }) => {\r\n                const result = (ENERGY_RECT_FULL_SIZE * (energy + power)) / energyCapacity;\r\n                return Math.min(result, ENERGY_RECT_FULL_SIZE);\r\n            },\r\n        },\r\n        {\r\n            id: 'energyResourceHeight',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ state: { energy = 0, energyCapacity } }) => {\r\n                const result = (ENERGY_RECT_FULL_SIZE * energy) / energyCapacity;\r\n                return Math.min(result, ENERGY_RECT_FULL_SIZE);\r\n            },\r\n        },\r\n        {\r\n            id: 'arrowsAlpha',\r\n            props: ['cooldownTime'],\r\n            func: (...params) => (isCooldown(...params) ? 0.1 : 1),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            payload: {\r\n                texture: 'terminal-border',\r\n                width: 200,\r\n                height: 200,\r\n                tint: { $calc: 'playerColor' },\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            payload: {\r\n                texture: 'terminal',\r\n                width: 200,\r\n                height: 200,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            when: isCooldown,\r\n            payload: {\r\n                texture: 'terminal-arrows',\r\n                width: 200,\r\n                height: 200,\r\n                alpha: 0.1,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            when: isNotCooldown,\r\n            payload: {\r\n                texture: 'terminal-arrows',\r\n                width: 200,\r\n                height: 200,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            when: isCooldown,\r\n            payload: {\r\n                texture: 'terminal-highlight',\r\n                width: 200,\r\n                height: 200,\r\n                tint: 0xFFFFFF,\r\n                alpha: 0,\r\n                blendMode: 1,\r\n            },\r\n            actions: [{\r\n                action: 'Sequence',\r\n                params: [[\r\n                    {\r\n                        action: 'AlphaTo',\r\n                        params: [1, { $processorParam: 'tickDuration', koef: 0.2 }],\r\n                    },\r\n                    {\r\n                        action: 'AlphaTo',\r\n                        params: [0, { $processorParam: 'tickDuration', koef: 0.8 }],\r\n                    },\r\n                ]],\r\n            }],\r\n        },\r\n        {\r\n            type: 'draw',\r\n            payload: {\r\n                drawings: [\r\n                    { method: 'beginFill', params: [0xffffff] },\r\n                    {\r\n                        method: 'drawRect',\r\n                        params: [\r\n                            { $calc: 'restResourceSize', koef: -0.5 },\r\n                            { $calc: 'restResourceSize', koef: -0.5 },\r\n                            { $calc: 'restResourceSize' },\r\n                            { $calc: 'restResourceSize' },\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                    { method: 'beginFill', params: [0xf41f33] },\r\n                    {\r\n                        method: 'drawRect',\r\n                        params: [\r\n                            { $calc: 'powerResourceSize', koef: -0.5 },\r\n                            { $calc: 'powerResourceSize', koef: -0.5 },\r\n                            { $calc: 'powerResourceSize' },\r\n                            { $calc: 'powerResourceSize' },\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                    { method: 'beginFill', params: [0xffe56d] },\r\n                    {\r\n                        method: 'drawRect',\r\n                        params: [\r\n                            { $calc: 'energyResourceHeight', koef: -0.5 },\r\n                            { $calc: 'energyResourceHeight', koef: -0.5 },\r\n                            { $calc: 'energyResourceHeight' },\r\n                            { $calc: 'energyResourceHeight' },\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            shouldRun: ({ calcs: { resourcesTotal } }) => resourcesTotal > 0,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 200,\r\n                height: 200,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 800,\r\n                height: 800,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 16,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nimport { resourceTotal } from '../calculation-templates';\r\n\r\nexport default {\r\n    calculations: [\r\n        resourceTotal(),\r\n        {\r\n            id: 'resourceColor',\r\n            func: ({ calcs: { resourcesTotal, playerColor } }) =>\r\n                (resourcesTotal > 0 ? playerColor : 0x000000),\r\n        },\r\n        {\r\n            id: 'decayAlpha',\r\n            func: ({ state: { decayTime, deathTime }, stateExtra: { gameTime } }) =>\r\n                1 - ((gameTime - deathTime) / (decayTime - deathTime)),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            id: 'tombstone-border',\r\n            once: true,\r\n            payload: {\r\n                texture: 'tombstone-border',\r\n                width: 100,\r\n                height: 100,\r\n                blendMode: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            props: ['resourceColor'],\r\n            payload: {\r\n                texture: 'tombstone-resource',\r\n                tint: { $calc: 'resourceColor' },\r\n                alpha: 0.8,\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            payload: {\r\n                texture: 'tombstone-resource',\r\n                width: 100,\r\n                height: 100,\r\n            },\r\n        },\r\n    ],\r\n    actions: [\r\n        {\r\n            targetId: 'tombstone-border',\r\n            actions: [\r\n                {\r\n                    action: 'AlphaTo',\r\n                    params: [\r\n                        { $calc: 'decayAlpha' },\r\n                        0,\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n    zIndex: 5,\r\n};\r\n","/**\r\n * Created by vedi on 18/08/2017.\r\n */\r\n\r\nimport mathHelper from '../../../helpers/mathHelper';\r\n\r\nconst ENERGY_BAR_FULL_HEIGHT = 66.7;\r\n\r\n/**\r\n * Sprite for base.\r\n * Sprite for rotatable area.\r\n * Drawable energy bar with formula `energy / energyCapacity`\r\n * Shot animation\r\n * Autorotation:\r\n *  1. To shot destination, or\r\n *  2. To random value in idling state.\r\n */\r\nexport default {\r\n    calculations: [\r\n        {\r\n            id: 'shotAnim',\r\n            func: ({ state: { actionLog } }) =>\r\n                actionLog.attack || actionLog.heal || actionLog.repair,\r\n        },\r\n        {\r\n            id: 'rotation',\r\n            func: ({ state: { x, y }, calcs: { shotAnim } }) => {\r\n                const { calculateAngle } = mathHelper;\r\n                if (!shotAnim) {\r\n                    return 0;\r\n                }\r\n                return calculateAngle(shotAnim.x, shotAnim.y, x, y);\r\n            },\r\n        },\r\n        {\r\n            id: 'energyBarHeight',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ state: { energy, energyCapacity } }) => {\r\n                const result = (ENERGY_BAR_FULL_HEIGHT * energy) / energyCapacity;\r\n                return Math.min(result, ENERGY_BAR_FULL_HEIGHT);\r\n            },\r\n        },\r\n        {\r\n            id: 'energyBarBorderRadius',\r\n            props: ['energy', 'energyCapacity'],\r\n            func: ({ calcs: { energyBarHeight } }) => Math.min(12, energyBarHeight / 2),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                texture: 'tower-base',\r\n                tint: { $calc: 'playerColor' },\r\n                width: 200,\r\n                height: 200,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: 'true',\r\n            payload: {\r\n                id: 'towerRotatable',\r\n                texture: 'tower-rotatable',\r\n                pivot: {\r\n                    y: 32,\r\n                },\r\n                width: 115,\r\n                height: 115,\r\n            },\r\n            actions: [{\r\n                action: 'RotateTo',\r\n                params: [{ $random: Math.PI * 2 }, 0],\r\n            }],\r\n        },\r\n        {\r\n            type: 'creepActions',\r\n            props: '*',\r\n            layer: 'effects',\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            payload: {\r\n                id: 'towerRotatable',\r\n            },\r\n            when: ({ calcs: { shotAnim } }) => !!shotAnim,\r\n            actions: [\r\n                {\r\n                    action: 'RotateTo',\r\n                    params: [\r\n                        { $calc: 'rotation' },\r\n                        0.3,\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            once: true,\r\n            payload: {\r\n                id: 'towerRotatable',\r\n            },\r\n            when: ({ calcs: { shotAnim } }) => !shotAnim,\r\n            actions: [\r\n                {\r\n                    action: 'Repeat',\r\n                    params: [\r\n                        {\r\n                            action: 'RotateBy',\r\n                            params: [\r\n                                Math.PI,\r\n                                10,\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            type: 'draw',\r\n            payload: {\r\n                parentId: 'towerRotatable',\r\n                drawings: [\r\n                    { method: 'beginFill', params: [0xffe56d] },\r\n                    {\r\n                        method: 'drawRoundedRect',\r\n                        params: [\r\n                            -45,\r\n                            0,\r\n                            90,\r\n                            { $calc: 'energyBarHeight' },\r\n                            { $calc: 'energyBarBorderRadius' },\r\n                        ],\r\n                    },\r\n                    { method: 'endFill' },\r\n                ],\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            once: true,\r\n            layer: 'lighting',\r\n            shouldRun: (({ state: { energy } }) => energy > 0),\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 100,\r\n                height: 100,\r\n                alpha: 1,\r\n            },\r\n        },\r\n        {\r\n            id: 'light',\r\n            once: true,\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 600,\r\n                height: 600,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            shouldRun: (({ state: { actionLog: { repair, heal, attack } = {} } }) =>\r\n                repair || heal || attack),\r\n            payload: {\r\n                id: 'light',\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [1.0, { $processorParam: 'tickDuration', koef: 0.1 }],\r\n                            },\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [0.5, { $processorParam: 'tickDuration', koef: 0.3 }],\r\n                            },\r\n                        ],\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 'flare',\r\n            once: true,\r\n            type: 'sprite',\r\n            layer: 'effects',\r\n            payload: {\r\n                texture: 'flare1',\r\n                width: 400,\r\n                height: 400,\r\n                alpha: 0,\r\n                blendMode: 1,\r\n            },\r\n        },\r\n        {\r\n            type: 'runAction',\r\n            when: ({ calcs: { shotAnim } }) => !!shotAnim,\r\n            payload: {\r\n                id: 'flare',\r\n            },\r\n            actions: [\r\n                {\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [0.2, { $processorParam: 'tickDuration', koef: 0.1 }],\r\n                            },\r\n                            {\r\n                                action: 'AlphaTo',\r\n                                params: [0.0, { $processorParam: 'tickDuration', koef: 0.3 }],\r\n                            },\r\n                        ],\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n    zIndex: 13,\r\n};\r\n","/**\r\n * Created by vedi on 18/03/2017.\r\n */\r\n\r\nimport _all from './objects/_all.metadata';\r\nimport constructedWall from './objects/constructedWall.metadata';\r\nimport constructionSite from './objects/constructionSite.metadata';\r\nimport container from './objects/container.metadata';\r\nimport controller from './objects/controller.metadata';\r\nimport creep from './objects/creep.metadata';\r\nimport energy from './objects/energy.metadata';\r\nimport extension from './objects/extension.metadata';\r\nimport extractor from './objects/extractor.metadata';\r\nimport flag from './objects/flag.metadata';\r\nimport keeperLair from './objects/keeperLair.metadata';\r\nimport lab from './objects/lab.metadata';\r\nimport link from './objects/link.metadata';\r\nimport mineral from './objects/mineral.metadata';\r\nimport nuke from './objects/nuke.metadata';\r\nimport nuker from './objects/nuker.metadata';\r\nimport observer from './objects/observer.metadata';\r\nimport portal from './objects/portal.metadata';\r\nimport powerBank from './objects/powerBank.metadata';\r\nimport powerSpawn from './objects/powerSpawn.metadata';\r\nimport rampart from './objects/rampart.metadata';\r\nimport road from './objects/road.metadata';\r\nimport source from './objects/source.metadata';\r\nimport spawn from './objects/spawn.metadata';\r\nimport storage from './objects/storage.metadata';\r\n// import tbd from './objects/tbd.metadata';\r\nimport terminal from './objects/terminal.metadata';\r\nimport tombstone from './objects/tombstone.metadata';\r\nimport tower from './objects/tower.metadata';\r\n\r\nconst { VoidFilter } = PIXI.filters;\r\nconst { TilingSprite } = PIXI.extras;\r\n\r\nexport default {\r\n    preprocessors: [\r\n        'setBadgeUrls',\r\n        'terrain',\r\n    ],\r\n    layers: [\r\n        {\r\n            id: 'terrain',\r\n            afterCreate: async (layer, { app, resourceManager,\r\n                world: { options: { VIEW_BOX, CELL_SIZE, HALF_CELL_SIZE = CELL_SIZE / 2,\r\n                    lighting = 'normal' } } }) => {\r\n                function setupExits(textureName, tileX, tileY, flipX, flipY) {\r\n                    const { texture } = resourceManager.getCachedResource(textureName);\r\n                    const sprite = new TilingSprite(texture,\r\n                        tileX ? VIEW_BOX : CELL_SIZE,\r\n                        tileY ? VIEW_BOX : CELL_SIZE);\r\n                    sprite.x = (-CELL_SIZE / 2) + (flipX ? VIEW_BOX - CELL_SIZE : 0);\r\n                    sprite.y = (-CELL_SIZE / 2) + (flipY ? VIEW_BOX - CELL_SIZE : 0);\r\n                    sprite.tileScale.x = CELL_SIZE / texture.width;\r\n                    sprite.tileScale.y = CELL_SIZE / texture.height;\r\n                    if (!(app.renderer instanceof PIXI.WebGLRenderer)) {\r\n                        sprite.tint = 0xa0a0a0;\r\n                    } else {\r\n                        if (lighting === 'disabled') {\r\n                            sprite.tint = 0xa0a0a0;\r\n                        }\r\n                        if (lighting === 'low') {\r\n                            sprite.tint = 0xc0c0c0;\r\n                        }\r\n                    }\r\n                    layer.addChild(sprite);\r\n                }\r\n\r\n                if (lighting !== 'normal' || !(app.renderer instanceof PIXI.WebGLRenderer)) {\r\n                    const background = new PIXI.Graphics();\r\n                    background.beginFill(lighting === 'disabled' ||\r\n                        !(app.renderer instanceof PIXI.WebGLRenderer) ? 0x202020 : 0x353535, 1.0);\r\n                    background.drawRect(-HALF_CELL_SIZE, -HALF_CELL_SIZE, VIEW_BOX, VIEW_BOX);\r\n                    background.endFill();\r\n                    layer.addChild(background);\r\n                }\r\n\r\n                const ground = new TilingSprite(\r\n                    resourceManager.getCachedResource('ground').texture, VIEW_BOX, VIEW_BOX);\r\n                ground.x = -HALF_CELL_SIZE;\r\n                ground.y = -HALF_CELL_SIZE;\r\n                ground.tileScale.x = 3;\r\n                ground.tileScale.y = 3;\r\n                if (lighting === 'normal') {\r\n                    ground.alpha = 0.3;\r\n                } else if (lighting === 'low') {\r\n                    ground.alpha = 0.1;\r\n                } else {\r\n                    ground.alpha = 0.2;\r\n                }\r\n                layer.addChild(ground);\r\n\r\n                const ground2 = new TilingSprite(\r\n                    resourceManager.getCachedResource('ground-mask').texture, VIEW_BOX, VIEW_BOX);\r\n                ground2.x = -HALF_CELL_SIZE;\r\n                ground2.y = -HALF_CELL_SIZE;\r\n                ground2.tileScale.x = 7;\r\n                ground2.tileScale.y = 7;\r\n                ground2.blendMode = PIXI.BLEND_MODES.MULTIPLY;\r\n                if (lighting === 'normal') {\r\n                    ground2.alpha = 0.15;\r\n                } else if (lighting === 'low') {\r\n                    ground2.alpha = 0.05;\r\n                } else {\r\n                    ground2.alpha = 0.1;\r\n                }\r\n                layer.addChild(ground2);\r\n\r\n                setupExits('exit-left', false, true, false, false);\r\n                setupExits('exit-bottom', true, false, false, true);\r\n                setupExits('exit-top', true, false, false, false);\r\n                setupExits('exit-right', false, true, true, false);\r\n            },\r\n        },\r\n        { id: 'objects', isDefault: true },\r\n        {\r\n            id: 'lighting',\r\n            afterCreate: async (layer, { app, world: { options: { CELL_SIZE,\r\n                HALF_CELL_SIZE = CELL_SIZE / 2, VIEW_BOX, lighting = 'normal' } } }) => {\r\n                if (lighting !== 'disabled' && app.renderer instanceof PIXI.WebGLRenderer) {\r\n                    layer.filters = [new VoidFilter()];\r\n                    layer.filters[0].blendMode = PIXI.BLEND_MODES.MULTIPLY;\r\n\r\n                    const ambient = new PIXI.Graphics();\r\n                    ambient.beginFill(0x808080, 1.0);\r\n                    ambient.drawRect(-HALF_CELL_SIZE, -HALF_CELL_SIZE, VIEW_BOX, VIEW_BOX);\r\n                    ambient.endFill();\r\n                    layer.addChild(ambient);\r\n\r\n                    if (lighting === 'low') {\r\n                        layer.alpha = 0.5;\r\n                    }\r\n\r\n                    layer.on('display', (element) => {\r\n                        if (!element._overrideBlendMode) {\r\n                            element.blendMode = PIXI.BLEND_MODES.SCREEN;\r\n                        }\r\n                    });\r\n                } else {\r\n                    layer.on('display', (element) => {\r\n                        element.visible = false;\r\n                    });\r\n                }\r\n            },\r\n        },\r\n        { id: 'effects' },\r\n    ],\r\n    objects: {\r\n        _all,\r\n        constructedWall,\r\n        constructionSite,\r\n        container,\r\n        controller,\r\n        creep,\r\n        energy,\r\n        extension,\r\n        extractor,\r\n        flag,\r\n        keeperLair,\r\n        lab,\r\n        link,\r\n        mineral,\r\n        nuke,\r\n        nuker,\r\n        observer,\r\n        portal,\r\n        powerBank,\r\n        powerSpawn,\r\n        road,\r\n        source,\r\n        spawn,\r\n        storage,\r\n        terminal,\r\n        tombstone,\r\n        tower,\r\n        rampart,\r\n    },\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nexport default {\r\n    processors: [\r\n        {\r\n            type: 'resourceCircle',\r\n        },\r\n        {\r\n            type: 'resourceCircle',\r\n            layer: 'lighting',\r\n            payload: {\r\n                tint: 0xFFFFFF,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 1,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nexport default {\r\n    processors: [\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                radius: 60,\r\n                color: 0x000000,\r\n            },\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            actions: [{\r\n                action: 'Repeat',\r\n                params: [{\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'Spawn',\r\n                                params: [[\r\n                                    {\r\n                                        action: 'ScaleTo',\r\n                                        params: [0, 0, 0],\r\n                                    },\r\n                                    {\r\n                                        action: 'FadeIn',\r\n                                        params: [0],\r\n                                    },\r\n                                ]],\r\n                            },\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [\r\n                                    { $rel: 'scale.x' },\r\n                                    { $rel: 'scale.y' },\r\n                                    1,\r\n                                ],\r\n                            },\r\n                            {\r\n                                action: 'FadeOut',\r\n                                params: [1],\r\n                            },\r\n                        ],\r\n                    ],\r\n                }],\r\n            }],\r\n            payload: {\r\n                radius: 50,\r\n                color: 0x780207,\r\n            },\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            actions: [{\r\n                action: 'Repeat',\r\n                params: [{\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [0, 0, 0],\r\n                            },\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [\r\n                                    { $rel: 'scale.x', koef: 0.3 },\r\n                                    { $rel: 'scale.y', koef: 0.3 },\r\n                                    1,\r\n                                ],\r\n                            },\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [\r\n                                    { $rel: 'scale.x' },\r\n                                    { $rel: 'scale.y' },\r\n                                    1,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    ],\r\n                }],\r\n            }],\r\n            payload: {\r\n                radius: 50,\r\n                color: 0x000000,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 800,\r\n                height: 800,\r\n                alpha: 0.5,\r\n                tint: 0xFF0000,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 150,\r\n                height: 150,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 3,\r\n};\r\n","/**\r\n * Created by vedi on 23/04/2017.\r\n */\r\n\r\nexport default {\r\n    processors: [\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            payload: {\r\n                radius: 45,\r\n                color: 0x111133,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            actions: [{\r\n                action: 'Repeat',\r\n                params: [{\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'Spawn',\r\n                                params: [[\r\n                                    {\r\n                                        action: 'ScaleTo',\r\n                                        params: [0, 0, 0],\r\n                                    },\r\n                                    {\r\n                                        action: 'AlphaTo',\r\n                                        params: [0.5, 0],\r\n                                    },\r\n                                ]],\r\n                            },\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [\r\n                                    { $rel: 'scale.x' },\r\n                                    { $rel: 'scale.y' },\r\n                                    1,\r\n                                ],\r\n                            },\r\n                            {\r\n                                action: 'FadeOut',\r\n                                params: [1],\r\n                            },\r\n                        ],\r\n                    ],\r\n                }],\r\n            }],\r\n            payload: {\r\n                radius: 40,\r\n                color: 0x61c0ed,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n        {\r\n            type: 'circle',\r\n            once: true,\r\n            actions: [{\r\n                action: 'Repeat',\r\n                params: [{\r\n                    action: 'Sequence',\r\n                    params: [\r\n                        [\r\n                            {\r\n                                action: 'Spawn',\r\n                                params: [[\r\n                                    {\r\n                                        action: 'ScaleTo',\r\n                                        params: [0, 0, 0],\r\n                                    },\r\n                                    {\r\n                                        action: 'AlphaTo',\r\n                                        params: [0.5, 0],\r\n                                    },\r\n                                ]],\r\n                            },\r\n                            {\r\n                                action: 'ScaleTo',\r\n                                params: [\r\n                                    { $rel: 'scale.x', koef: 0.3 },\r\n                                    { $rel: 'scale.y', koef: 0.3 },\r\n                                    1,\r\n                                ],\r\n                            },\r\n                            {\r\n                                action: 'Spawn',\r\n                                params: [[\r\n                                    {\r\n                                        action: 'ScaleTo',\r\n                                        params: [\r\n                                            { $rel: 'scale.x' },\r\n                                            { $rel: 'scale.y' },\r\n                                            1,\r\n                                        ],\r\n                                    },\r\n                                    {\r\n                                        action: 'FadeOut',\r\n                                        params: [1],\r\n                                    },\r\n                                ]],\r\n                            },\r\n\r\n                        ],\r\n                    ],\r\n                }],\r\n            }],\r\n            payload: {\r\n                radius: 40,\r\n                color: 0x111133,\r\n                alpha: 0.5,\r\n            },\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 700,\r\n                height: 700,\r\n                tint: 0x9999FF,\r\n                alpha: 0.7,\r\n            },\r\n            actions: [{\r\n                action: 'Spawn',\r\n                params: [[\r\n                    {\r\n                        action: 'Repeat',\r\n                        params: [{\r\n                            action: 'Sequence',\r\n                            params: [[\r\n                                {\r\n                                    action: 'ScaleTo',\r\n                                    params: [\r\n                                        { $rel: 'scale.x', koef: 1.2 },\r\n                                        { $rel: 'scale.y', koef: 1.2 },\r\n                                        2,\r\n                                    ],\r\n                                },\r\n                                {\r\n                                    action: 'ScaleTo',\r\n                                    params: [\r\n                                        { $rel: 'scale.x' },\r\n                                        { $rel: 'scale.y' },\r\n                                        2,\r\n                                    ],\r\n                                },\r\n                            ]],\r\n                        }],\r\n                    },\r\n                    {\r\n                        action: 'Repeat',\r\n                        params: [{\r\n                            action: 'Sequence',\r\n                            params: [[\r\n                                {\r\n                                    action: 'AlphaTo',\r\n                                    params: [0.1, 3.5],\r\n                                },\r\n                                {\r\n                                    action: 'AlphaTo',\r\n                                    params: [0.7, 3.5],\r\n                                },\r\n                            ]],\r\n                        }],\r\n                    },\r\n                ]],\r\n            }],\r\n        },\r\n        {\r\n            type: 'sprite',\r\n            layer: 'lighting',\r\n            once: true,\r\n            payload: {\r\n                texture: 'glow',\r\n                width: 150,\r\n                height: 150,\r\n                tint: 0x7777FF,\r\n            },\r\n        },\r\n    ],\r\n    zIndex: 3,\r\n};\r\n","/**\r\n * Created by vedi on 17/08/2017.\r\n */\r\n\r\nexport default {\r\n    processors: [\r\n        {\r\n            type: 'road',\r\n            layer: 'objects',\r\n        },\r\n    ],\r\n    disappearProcessor: { type: 'disappear' },\r\n    zIndex: -1\r\n};\r\n","export default {\r\n    calculations: [\r\n        {\r\n            id: 'rampartColor',\r\n            once: true,\r\n            func: ({ state: { user }, stateExtra: { gameData: { player } } }) =>\r\n                (user === player ? 0x44FF44 : 0xFF4444),\r\n        },\r\n    ],\r\n    processors: [\r\n        {\r\n            type: 'sprite',\r\n            layer: 'effects',\r\n            props: ['isPublic'],\r\n            payload: {\r\n                texture: 'rampart',\r\n                width: 100,\r\n                height: 100,\r\n                alpha: 0.5,\r\n                tint: { $calc: 'rampartColor' },\r\n            },\r\n            shouldRun: ({ state: { isPublic } }) => !!isPublic,\r\n        },\r\n    ],\r\n    zIndex: 0,\r\n};\r\n"],"sourceRoot":""}